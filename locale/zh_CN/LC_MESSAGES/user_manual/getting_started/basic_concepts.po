msgid ""
msgstr ""
"Project-Id-Version: kdeorg\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 03:34+0200\n"
"PO-Revision-Date: 2019-07-18 15:06\n"
"Last-Translator: Guo Yunhe (guoyunhe)\n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: kdeorg\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /kf5-trunk/messages/www/"
"docs_krita_org_user_manual___getting_started___basic_concepts.pot\n"
"Language: zh_CN\n"

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Pixels-brushstroke.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/dockers/Dockers.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Multi-window.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Canvas-krita.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Krita_ghostlady_1.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Krita_ghostlady_2.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/Krita_ghostlady_3.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/tools/Krita_transforms_free.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:None
msgid ".. image:: images/animation/Introduction_to_animation_walkcycle_02.gif"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:1
msgid "An overview of the basic concepts of Krita."
msgstr "Krita 的基础概念简介。"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:21
msgid "Basic Concepts"
msgstr "基础概念"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:73
msgid "View"
msgstr "视图"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:99
msgid "Window"
msgstr "窗口"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:150
msgid "Tools"
msgstr "工具"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:247
msgid "Masks"
msgstr "蒙版"

#: ../../user_manual/getting_started/basic_concepts.rst:16
#: ../../user_manual/getting_started/basic_concepts.rst:271
msgid "Filters"
msgstr "滤镜"

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Color"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Transform"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Grid"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Guides"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Layers"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:16
msgid "Vector"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:23
msgid ""
"If this is your first foray into digital painting, this page should give you "
"a brief introduction to the basic but important concepts required for "
"getting started with digital painting in Krita."
msgstr ""
"如果你刚刚开始接触数字绘画，你可在本页面学到许多重要的基础概念，它们将帮助你"
"通过 Krita 来入门数字绘画。"

#: ../../user_manual/getting_started/basic_concepts.rst:25
msgid ""
"Although very lengthy, this page tries to give a brief overview of some of "
"the Krita's most important functionality; it tries to help you grasp the "
"functions of various menu and buttons in Krita without going into minute "
"details."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:27
msgid "Contents"
msgstr "目录"

#: ../../user_manual/getting_started/basic_concepts.rst:30
msgid "Raster and Vector"
msgstr "栅格图像和矢量图形"

#: ../../user_manual/getting_started/basic_concepts.rst:32
msgid ""
"Even though Krita is regarded primarily a raster based application, it has "
"some vector editing capabilities as well. If you are new to digital painting "
"medium, it is necessary that you first get yourself acquainted with the "
"concepts of raster and :ref:`Vector <vector_graphics>` based images."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:34
msgid ""
"In digital imaging, a pixel (Picture Element) is a basic and lowest element "
"of an Image. It is basically a grid of points each displaying specific "
"color. Raster editing is manipulating and editing these pixels. For example "
"when you take a 1-pixel brush which is colored black and painting on the "
"white canvas in Krita you are actually changing the color of the pixel "
"beneath your brush from white to black. When you zoom in and see a brush "
"stroke you can notice many small squares with colors, these are pixels:"
msgstr ""
"在数字影像技术中，像素 (pixel，图像元素 Picture Element 的缩写) 是组成图像的"
"最基础的元素。把数字图像放大后你会发现它呈网格状，每个网格单独呈现一种颜色，"
"这些网格中的每一格就是一个像素。编辑栅格图像就是在对这些像素进行操作。在 "
"Krita 里面，当你使用一个大小为 1 像素的黑色笔刷在白色画布上作画时，你实际上是"
"在把笔刷下面的那个像素的颜色从白改成了黑。如果把笔画放大观察，你可以看见许多"
"颜色小方块，它们就是像素："

#: ../../user_manual/getting_started/basic_concepts.rst:39
msgid ""
"In contrast to raster images, vector graphic images are based on "
"mathematical expressions. They are independent of the pixels. For example, "
"when you draw a rectangle on a :ref:`vector layer <vector_layers>` in Krita "
"you are actually drawing paths passing through points that are called nodes, "
"which are located on specific coordinates on the 'x' and 'y' axes. When you "
"re-size or move these points the computer calculates and redraws the path "
"and displays the newly formed shape to you. Hence you can re-size the vector "
"shape to any extent without any loss in quality. In Krita, everything which "
"is not on a vector layer is raster based."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:42
msgid "Images, Views and Windows"
msgstr "图像、视图和窗口"

#: ../../user_manual/getting_started/basic_concepts.rst:44
msgid ""
"In a painting program, there are three major containers that make up your "
"work-space."
msgstr "绘画软件的工作空间由三大部分组成。"

#: ../../user_manual/getting_started/basic_concepts.rst:47
msgid "Image"
msgstr "图像"

#: ../../user_manual/getting_started/basic_concepts.rst:49
msgid "The most important one is the **Image**."
msgstr "工作空间最重要的部分便是 **图像**。"

#: ../../user_manual/getting_started/basic_concepts.rst:51
msgid ""
"This is an individual copy of the image that you can open or create via the "
"file dialog. Krita allows you to open the file as a new copy via the :"
"guilabel:`File` menu, or to save it as a new file, or make an incremental "
"copy."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:53
msgid ""
"An image contains data regarding layers, color space of image and layers, "
"canvas size and metadata such as creator, date created and DPI et cetera. "
"Krita can open multiple images at once, you can switch between them via the :"
"guilabel:`Window` menu."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:55
msgid ""
"Because the image is a working copy of the image on the hard drive, you can "
"do a lot of little saving tricks with it:"
msgstr ""
"因为该图像是它在硬盘上的文件的工作副本，所以在保存时可以有下面的一些不同做"
"法："

#: ../../user_manual/getting_started/basic_concepts.rst:57
msgid "New"
msgstr "新建"

#: ../../user_manual/getting_started/basic_concepts.rst:58
msgid ""
"Makes a new image. When you press :menuselection:`Save`, you make a new file "
"on the hard drive."
msgstr ""
"创建一个新的图像。当你点击 :menuselection:`保存` 时，该图像会被保存成硬盘上的"
"一个新文件。"

#: ../../user_manual/getting_started/basic_concepts.rst:59
msgid "Open"
msgstr "打开"

#: ../../user_manual/getting_started/basic_concepts.rst:60
msgid ""
"Makes an internal copy of an existing image. When you press :menuselection:"
"`Save`, you will overwrite the original existing image with your working "
"copy."
msgstr ""
"在 Krita 内部生成已有图像文件的一个工作副本。当你点击 :menuselection:`保存` "
"时，此工作副本将覆盖原始图像文件。"

#: ../../user_manual/getting_started/basic_concepts.rst:61
msgid "Open the existing Document as Untitled Document"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:62
msgid ""
"Similar to :menuselection:`Open`, however, :menuselection:`Save` will "
"request you to specify a saving location: you're making a new copy. This is "
"similar to :menuselection:`Import` in other programs."
msgstr ""
"类似于 :menuselection:`打开`，但点击 :menuselection:`保存` 时将要求你指定一个"
"新的保存位置，把它保存成一个不同的文件。这与其他软件的 :menuselection:`导入` "
"类似。"

#: ../../user_manual/getting_started/basic_concepts.rst:63
msgid "Create Copy From Current Image"
msgstr "从当前图像创建副本"

#: ../../user_manual/getting_started/basic_concepts.rst:64
msgid ""
"Similar to :menuselection:`Open existing Document as Untitled Document` but "
"with the currently selected image."
msgstr ""
"类似于 :menuselection:`将已有文档作为未命名文档打开`，但这个功能是把当前显示"
"的图像另存一个副本。"

#: ../../user_manual/getting_started/basic_concepts.rst:66
msgid "Save incremental"
msgstr "保存增量"

#: ../../user_manual/getting_started/basic_concepts.rst:66
msgid ""
"Allows you to quickly make a snapshot of the current image by making a new "
"file with a version number added to it."
msgstr ""
"让你可以快速保存当前图像的一个快照，快照的文件名会自动附加一串版本数字作为后"
"缀。"

#: ../../user_manual/getting_started/basic_concepts.rst:68
msgid ""
"These options are great for people doing production work, who need to switch "
"between files quickly or have backup files in case they do something "
"extreme. Krita also has a file backup system in the form of auto-saves, "
"backup files and crash recovery. You can configure the option for these "
"features in the general settings."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:70
msgid "You view the image via a **View**."
msgstr "你必须在 **视图** 里面观察打开的图像。"

#: ../../user_manual/getting_started/basic_concepts.rst:75
msgid ""
"A view is a window onto your image. Krita allows you to have multiple views, "
"and you can manipulate the view to zoom, rotate and mirror and modify the "
"color of the way you see an image without editing the image itself. This is "
"very useful for artists, as changing the way they view the image is a common "
"way to diagnose some common mistakes, like a drawing which is skewed towards "
"one side. Mirroring with :kbd:`M` makes such skewing easy to identify."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:77
msgid ""
"If you have trouble drawing certain curves you will enjoy using rotation for "
"drawing, and of course, there is zooming in and out for precision and rough "
"work."
msgstr ""
"如果你在绘制某些角度刁钻的曲线时觉得不顺手，你可以把视图旋转之后再进行绘制。"
"你也可以在需要刻画细节时放大视图，需要大笔勾勒时缩小视图。"

#: ../../user_manual/getting_started/basic_concepts.rst:82
msgid ".. image:: images/Krita_multiple_views.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:82
msgid "Multiple views of the same image in Krita"
msgstr "Krita 可以显示同一个图像的多个视图"

#: ../../user_manual/getting_started/basic_concepts.rst:84
msgid ""
"Multiple views are possible in Krita via :menuselection:`Window --> New view "
"--> image name`. You can switch between them via the :guilabel:`Window` "
"menu, or :kbd:`Ctrl + Tab`, or keep them in the same area when **subwindow** "
"mode is active in the :ref:`settings <general_settings>`, via :menuselection:"
"`Window --> Tile`."
msgstr ""
"如果需要为同一个图像显示多个视图，点击菜单栏的 :menuselection:`窗口 --> 新建"
"视图 --> 图像名称` 。你可以在 :guilabel:`窗口` 菜单切换视图，也可以按 :kbd:"
"`Ctrl + Tab` 来进行切换。如果需要并排显示多个视图，请打开 :ref:`设置 "
"<general_settings>` 对话框，在 :menuselection:`窗口 --> 多文档模式` 下拉菜单"
"选中“子窗口”。"

#: ../../user_manual/getting_started/basic_concepts.rst:87
msgid "Dockers"
msgstr "工具面板"

#: ../../user_manual/getting_started/basic_concepts.rst:89
msgid ""
"Dockers are little subwindows in :ref:`Krita's interface <navigation>`. They "
"contain useful tools, like the color selector, layer stack, tool options, et "
"cetera."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:94
msgid "The image above shows some of the dockers in Krita."
msgstr "上图展示了 Krita 的部分工具面板。"

#: ../../user_manual/getting_started/basic_concepts.rst:96
msgid "All the views and the dockers are held inside **Windows**."
msgstr "所有的视图和工具面板都被显示在 **窗口** 内部。"

#: ../../user_manual/getting_started/basic_concepts.rst:101
msgid ""
"If you've used a computer before, you know what windows are: They are big "
"containers for your computer programs."
msgstr "如果你以前使用过计算机，你应该对窗口很熟悉：它们是显示各种程序的容器。"

#: ../../user_manual/getting_started/basic_concepts.rst:103
msgid ""
"Krita allows you to have multiple windows via :menuselection:`Window --> New "
"Window`.  You can then drag this to another monitor for multi-monitor use."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:105
msgid "The image below shows an example of multiple windows in Krita."
msgstr "下图展示了 Krita 的多窗口状态。"

#: ../../user_manual/getting_started/basic_concepts.rst:111
msgid "Canvas in Krita"
msgstr "画布"

#: ../../user_manual/getting_started/basic_concepts.rst:113
msgid ""
"When you create a new document in Krita for the first time you will see a "
"rectangular white area. This is called a canvas. You can see it in the image "
"below. The area marked by a red rectangle is a canvas."
msgstr ""
"在 Krita 里新建一个文档后，你会看到一个矩形的白色区域。这个区域就叫做画布。你"
"可以在下图的红框中确认它的位置。"

#: ../../user_manual/getting_started/basic_concepts.rst:118
msgid ""
"When you save the painting as jpg, png et cetera or take a print out of the "
"painting, only the content inside this area is taken into consideration. "
"Anything beyond it is ignored. Krita does store information beyond this "
"area, you just won't be able to see it. This data is stored in the "
"**Layers**."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:122
msgid "Layers and Compositing"
msgstr "图层和合成"

#: ../../user_manual/getting_started/basic_concepts.rst:124
msgid ""
"Like a landscape painter will first paint the sky and then the furthest away "
"elements before slowly working his way to the foreground elements, computers "
"will do the same with all the things you tell them to draw. So, if you tell "
"them to draw a circle after a square on the same spot, the circle will "
"always be drawn later. This is called the **Drawing Order**."
msgstr ""
"正如风景画家会先画出背景的天空，然后从最远的景物一步一步画到前景一样，计算机"
"也会以类似方式处理你让它绘制的东西。如果你让计算机先画一个方形，然后在它的位"
"置上再画一个圆形，圆形总是会被放在最后才画。这叫做 **绘制顺序**。"

#: ../../user_manual/getting_started/basic_concepts.rst:126
msgid ""
"The layer stack is a way for you to separate elements of a drawing and "
"manipulate the drawing order by showing you which layers are drawn when and "
"allowing you to change the order they are drawn in and also apply all sorts "
"of other effects. This is called **Compositing**."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:128
msgid ""
"This allows you to have line art above the colors, or trees before the "
"mountains, and edit each without affecting the other."
msgstr ""
"你可以通过图层把线稿置于底色之上，或者把树木放在远山前面，在编辑时它们不会互"
"相影响。"

#: ../../user_manual/getting_started/basic_concepts.rst:130
msgid ""
"Krita has many layer-types, each layer type is unique and has its own "
"usecase:"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:132
msgid ":ref:`paint_layers`"
msgstr ":ref:`paint_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:133
msgid ""
"These are raster layers, and the most common and default layer type in "
"Krita, you will be painting on these."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:134
msgid ":ref:`vector_layers`"
msgstr ":ref:`vector_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:135
msgid ""
"This is a layer type on which you draw vector graphics. Vector graphics are "
"typically more simple than raster graphics and with the benefit that you can "
"deform them with less blurriness."
msgstr ""
"你在这种图层上面绘制矢量图形。矢量图形一般比栅格图像更简单，在变形后也不会变"
"模糊。"

#: ../../user_manual/getting_started/basic_concepts.rst:136
msgid ":ref:`group_layers`"
msgstr ":ref:`group_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:137
msgid ""
"These allow you to group several layers via drag and drop, so you can "
"organize, move, apply masks and perform other actions on them together."
msgstr ""
"你可以把其他图层拖放到这种图层里组成一组，然后便可以对整组图层进行组织、移"
"动、应用蒙版以及其他操作。"

#: ../../user_manual/getting_started/basic_concepts.rst:138
msgid ":ref:`clone_layers`"
msgstr ":ref:`clone_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:139
msgid ""
"These are copies of the layer you selected when making them. They get "
"updated automatically when changing the original."
msgstr ""
"它们是另一个图层的实时克隆，你创建它们时选中的图层就是它们的母本，所有对母本"
"图层的修改都会立即反映到对应的克隆图层上面。"

#: ../../user_manual/getting_started/basic_concepts.rst:140
msgid ":ref:`file_layers`"
msgstr ":ref:`file_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:141
msgid ""
"These refer to an existing image outside of Krita and update as soon as the "
"outside image updates. Useful for logos and emblems that change a lot."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:142
msgid ":ref:`fill_layers`"
msgstr ":ref:`fill_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:143
msgid ""
"These layers are filled with something that Krita can make up on the fly, "
"like colors or patterns."
msgstr "这些图层填充了 Krita 能自行生成的内容，如颜色或图案等。"

#: ../../user_manual/getting_started/basic_concepts.rst:145
msgid ":ref:`filter_layers`"
msgstr ":ref:`filter_layers`"

#: ../../user_manual/getting_started/basic_concepts.rst:145
msgid ""
"These layers help us to apply some filters which will affect a composite "
"image made from all the layers beneath them."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:147
msgid "You can manipulate the content of the layers with **Tools**."
msgstr "你可以用 **工具** 来操作图层里面的内容。"

#: ../../user_manual/getting_started/basic_concepts.rst:152
msgid ""
"Tools help you manipulate the image data. The most common one is of course, "
"the freehand brush, which is the default when you open Krita. There are "
"roughly five types of tools in Krita:"
msgstr ""
"你可以使用工具来对图像的数据进行操作。最常用的工具当然是手绘笔刷，Krita 也会"
"在启动之后默认选中它。Krita 的工具可以被笼统地分为 5 大类："

#: ../../user_manual/getting_started/basic_concepts.rst:154
msgid "Paint Tools"
msgstr "绘画工具"

#: ../../user_manual/getting_started/basic_concepts.rst:155
msgid ""
"These are tools for painting on paint layers. They describe shapes, like "
"rectangles, circles and straight lines, but also freehand paths. These "
"shapes then get used by the Brush engines to make shapes and drawing effects."
msgstr ""
"这组工具用于在颜料图层上进行绘画。它们既可以按照矩形、圆形和直线等形状进行描"
"绘，也可以按手绘的路径进行描绘。它们还可以通过笔刷引擎来绘制出不同的形状和效"
"果。"

#: ../../user_manual/getting_started/basic_concepts.rst:156
msgid "Vector Tools"
msgstr "矢量工具"

#: ../../user_manual/getting_started/basic_concepts.rst:157
msgid ""
"This is the upper row of tools, which are used to edit vectors. "
"Interestingly enough, all paint tools except the freehand brush allow you to "
"draw shapes on the vector layers. The resulting object won't use the brush "
"preset for outline unlike the ones made with paint tools on normal layer."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:158
msgid "Selection Tools"
msgstr "选区工具"

#: ../../user_manual/getting_started/basic_concepts.rst:159
msgid ""
"Selections allow you to edit a very specific area of the layer you are "
"working on without affecting the others. The selection tools allow you to "
"draw or modify the current selection. This is like using masking-fluids in "
"traditional painting method, but whereas using masking fluids and film is "
"often messy and delicate, selections are far easier to use."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:160
msgid "Guide Tools"
msgstr "导线工具"

#: ../../user_manual/getting_started/basic_concepts.rst:161
msgid "These are tools like grids and assistants."
msgstr "包括网格和辅助尺等。"

#: ../../user_manual/getting_started/basic_concepts.rst:163
msgid "Transform Tools"
msgstr "变形工具"

#: ../../user_manual/getting_started/basic_concepts.rst:163
msgid ""
"These are tools that allow you to transform your layer or object on the "
"canvas."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:165
msgid ""
"All tools can be found in the toolbox, and information about individual "
"tools can be found in the :ref:`tools <cat_tools>` section of the manual."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:168
msgid "Brush Engines"
msgstr "笔刷引擎"

#: ../../user_manual/getting_started/basic_concepts.rst:170
msgid ""
"Brush engines, as mentioned before, take a path and tablet information and "
"add effects to it, making a stroke."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:172
msgid ""
"Engine is a term Krita developers use to describe a complex interacting set "
"of code, that is the core for certain functionality and is highly "
"configurable. In short, like the engine of your car drives your car, and the "
"type of engine and its configuration affects how you use your car, the brush "
"engine drives the look and feel of the brush, and different brush engines "
"have different results."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:174
msgid ""
"Krita has :ref:`a LOT of different brush engines <category_brush_engines>`, "
"all with different effects."
msgstr ""
"Krita 具备 :ref:`丰富多样的笔刷引擎 <category_brush_engines>`，它们的原理各不"
"相同，效果各具特色。"

#: ../../user_manual/getting_started/basic_concepts.rst:179
msgid ".. image:: images/brushes/Krita_example_differentbrushengines.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:179
msgid ""
"**Left:** pixel brush, **Center:** color smudge brush, **Right:** sketch "
"brush"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:181
msgid ""
"For example, the pixel-brush engine is simple and allows you to do most of "
"your basic work, but if you do a lot of painting, the color smudge brush "
"engine might be more useful. Even though it's slower to use than the Pixel "
"Brush engine, its mixing of colors allows you to work faster when you need "
"to blend and mix colors."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:183
msgid ""
"If you want something totally different from that, the sketch brush engine "
"helps with making messy lines, and the shape brush engine allows you to make "
"big flats quickly. There are a lot of cool effects inside Krita's brush "
"engines, so try them all out, and be sure to check the chapters on each."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:185
msgid ""
"You can configure these effects via the Brush Settings drop-down, which can "
"be quickly accessed via :kbd:`F5`. These configurations can then be saved "
"into presets, which you can quickly access with :kbd:`F6` or the Brush "
"Presets docker."
msgstr ""
"要调整笔刷效果，可以点击工具栏的“笔刷选项”下拉面板，也可以按 :kbd:`F5` 弹出。"
"你可以把修改过的笔刷选项保存成预设。按 :kbd:`F6` 可以快速访问“笔刷预设” 工具"
"面板。"

#: ../../user_manual/getting_started/basic_concepts.rst:187
msgid "Brushes draw with colors, but how do computers understand colors?"
msgstr "笔刷可以画出各种颜色，那么计算机又是如何理解色彩的呢？"

#: ../../user_manual/getting_started/basic_concepts.rst:190
msgid "Colors"
msgstr "色彩"

#: ../../user_manual/getting_started/basic_concepts.rst:192
msgid ""
"Humans can see a few million colors, which are combinations of "
"electromagnetic waves (light) bouncing off a surface, where the surface "
"absorbs some of it."
msgstr ""
"人眼可以分辨几百万种颜色，色彩是人类对射入眼睛的光线的感知，而光是一种电磁"
"波。任何物体的表面都会反射、吸收不同波长的电磁波 (光) ，不同波长的光呈现出不"
"同的颜色。"

#: ../../user_manual/getting_started/basic_concepts.rst:197
msgid ".. image:: images/Krita_basics_primaries.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:197
msgid ""
"Subtractive CMY colors on the left and additive RGB colors on the right.  "
"This difference means that printers benefit from color conversion before "
"printing"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:199
msgid ""
"When painting traditionally, we use pigments which also absorb the right "
"light-waves for the color we want it to have, but the more pigments you "
"combine, the more light is absorbed, leading to a kind of murky black. This "
"is why we call the mixing of paints **subtractive**, as it subtracts light "
"the more pigments you put together. Because of that, in traditional pigment "
"mixing, our most efficient primaries are three fairly light colors: Cyan "
"blue and Magenta red and Yellow (CMY)."
msgstr ""
"在传统绘画中我们使用颜料作画。不同的颜料会吸收不同波长的光，从而呈现出它们应"
"有的颜色。但是混合的颜料越多，被吸收的光就越多，颜色也会变得越来越浑浊灰暗，"
"所以我们也把颜料的混合原理叫做 **减色法**。基于这种原理，在传统颜料中，混色效"
"果最好的三原色都是比较明亮的颜色：青、品红和黄 (CMY)。"

#: ../../user_manual/getting_started/basic_concepts.rst:201
msgid ""
"A computer also uses three primaries and uses a specific amount of each "
"primary in a color as the way it stores color. However, a computer is a "
"screen that emits light. So it makes more light, which means it needs to do "
"**additive** mixing, where adding more and more colored lights result in "
"white. This is why the three most efficient primaries, as used by computers "
"are Red, Green and Blue (RGB)."
msgstr ""
"计算机同样使用三原色，它通过标注一种颜色所含的三原色的数值来保存颜色。计算机"
"的屏幕是发光体，而不同的色光在混合后会变得更加明亮，直到变为白色，所以这种混"
"色原理又叫做 **色光加色法**。在计算机的使用情景里，混色效果最好的三原色是红、"
"绿、蓝 (RGB)。"

#: ../../user_manual/getting_started/basic_concepts.rst:203
msgid ""
"Per pixel, a computer then stores the value of each of these primaries, with "
"the maximum depending on the bit-depth. These are called the **components** "
"or **channels** depending on who you talk to."
msgstr ""
"计算机以像素为单位保存颜色的三原色数值。在不同的色彩模型里面，可以显示的颜色"
"种类与颜色的 **分量** 或者 **通道** 的位深度有关。"

#: ../../user_manual/getting_started/basic_concepts.rst:208
msgid ".. image:: images/Krita_basic_channel_rose.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:208
msgid ""
"This is the red-channel of an image of a red rose. As you can see, the "
"petals are white here, indicating that those areas contain full red. The "
"leaves are much darker, indicating a lack of red, which is to be expected, "
"as they are green."
msgstr ""
"上图是一张红玫瑰的图像中的红色通道。我们可以看到花瓣是浅白色的，这意味着那些"
"区域的红色含量高。茎叶的颜色很暗，意味着红色的含量少，因为它们是绿色的。"

#: ../../user_manual/getting_started/basic_concepts.rst:210
msgid ""
"Though by default computers use RGB, they can also convert to CMYK (the "
"subtractive model), or a perceptual model like LAB. In all cases this is "
"just a different way of indicating how the colors relate to each other, and "
"each time it usually has 3 components. The exception here is grayscale, "
"because the computer only needs to remember how white a color is. This is "
"why grayscale is more efficient memory-wise."
msgstr ""
"计算机默认使用 RGB 色彩模型，但它们也可以把颜色转换成减色法的 CMYK 模型，或者"
"可感知的模型，如 LAB 模型。无论是哪种模型，本质上都是在描述颜色的相互关系，它"
"们通常都会包含三个分量。灰阶图像是个例外，在这个模型里计算机只需保存一种颜色"
"有多白，所以灰阶图像比较节省内存。"

#: ../../user_manual/getting_started/basic_concepts.rst:212
msgid ""
"In fact, if you look at each channel separately, they also look like "
"grayscale images, but instead white just means how much Red, Green or Blue "
"there is."
msgstr ""
"如果你把每个通道分离出来单独观察，会发现它们看起来像是一张灰阶图像，但它们实"
"际上描述的是画面上的红、绿、蓝有多少。"

#: ../../user_manual/getting_started/basic_concepts.rst:214
msgid ""
"Krita has a very complex color management system, which you can read more "
"about :ref:`here <general_concept_color>`."
msgstr ""
"Krita 内建了一套非常复杂的色彩管理体系，你可以在:ref:`此章节 "
"<general_concept_color>`进一步了解。"

#: ../../user_manual/getting_started/basic_concepts.rst:217
msgid "Transparency"
msgstr "透明度"

#: ../../user_manual/getting_started/basic_concepts.rst:219
msgid ""
"Just like Red, Green and Blue, the computer can also store how transparent a "
"pixel is. This is important for **compositing** as mentioned before. After "
"all, there's no point in having multiple layers if you can't have "
"transparency."
msgstr ""
"和红、绿、蓝一样，计算机也可以保存一个像素的透明程度。透明度对于前面提到过的 "
"**图层合成** 至关重要，因为要是图层没有透明区域的话，把画面内容分成几个图层又"
"有什么意义呢？"

#: ../../user_manual/getting_started/basic_concepts.rst:221
msgid ""
"Transparency is stored in the same way as colors, meaning that it's also a "
"channel. We usually call this channel the **alpha channel** or **alpha** for "
"short. The reason behind this is that the letter 'α' is used to represent it "
"in programming."
msgstr ""
"透明度和颜色使用相同的方式进行保存，所以它也有自己的通道。我们通常把这条通道"
"叫做 **阿尔法通道** 或者简称为 **alpha**。这是因为希腊字母“α”被用于在编程中表"
"示透明度。"

#: ../../user_manual/getting_started/basic_concepts.rst:223
msgid ""
"Some older programs don't always have transparency by default. Krita is the "
"opposite: it doesn't understand images that don't track transparency, and "
"will always add a transparency channel to images. When a given pixel is "
"completely transparent on all layers, Krita will instead show a checkerboard "
"pattern, like the rose image shown above."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:226
msgid "Blending modes"
msgstr "混色模式"

#: ../../user_manual/getting_started/basic_concepts.rst:228
msgid ""
"Because colors are stored as numbers you can do maths with them. We call "
"this **Blending Modes** or **Compositing Modes**."
msgstr ""
"因为颜色是以数字形式进行保存的，所以我们可以对它们进行数学计算。计算的方式有"
"很多种，我们把它们统称为 **混色模式** 或者 **合成模式**。"

#: ../../user_manual/getting_started/basic_concepts.rst:230
msgid ""
"Blending modes can be done per layer or per brush stroke, and thus are also "
"part of the compositing of layers."
msgstr "混色模式可被应用到每个图层或者每一笔画。它是图层合成的重要环节。"

#: ../../user_manual/getting_started/basic_concepts.rst:233
msgid "Multiply"
msgstr "相乘"

#: ../../user_manual/getting_started/basic_concepts.rst:233
msgid ""
"A commonly used blending mode is for example :menuselection:`Multiply` which "
"multiplies the components, leading to darker colors. This allows you to "
"simulate the subtractive mixing, and thus makes painting shadows much easier."
msgstr ""
":menuselection:`相乘` 是一种常用的混色模式。它把两个图层的颜色分量相乘，得到"
"更深的颜色。我们可以用它模拟减色混色法，这样可以更容易地画出阴影。因为某些原"
"因，在 Photoshop 等软件中它常常被翻译为“正片叠底”。"

#: ../../user_manual/getting_started/basic_concepts.rst:235
msgid "Addition"
msgstr "相加"

#: ../../user_manual/getting_started/basic_concepts.rst:236
msgid ""
"Another common one is :menuselection:`Addition`, which adds one layer's "
"components to the other, making it perfect for special glow effects."
msgstr ""
":menuselection:`加法` 也是一种常见的混色模式，它会把两个图层的颜色分量相加，"
"非常适合用来营造发光特效。"

#: ../../user_manual/getting_started/basic_concepts.rst:237
msgid "Erasing"
msgstr "擦除"

#: ../../user_manual/getting_started/basic_concepts.rst:238
msgid ""
":menuselection:`Erasing` is a blending mode in Krita. There is no eraser "
"tool, but you can toggle on the brush quickly with :kbd:`E` to become an "
"eraser. You can also use it on layers. Unlike the other blending modes, this "
"one only affects the alpha channel, making things more transparent."
msgstr ""
":menuselection:`擦除` 是 Krita 的一种混色模式。Krita 没有单独的橡皮擦工具，但"
"你可以随时按 :kbd:`E` 把当前笔刷切换到擦除模式。你也可以把图层设成擦除模式。"
"和其他混色模式不同，它只针对透明度通道起效果，让像素变得更加透明。"

#: ../../user_manual/getting_started/basic_concepts.rst:240
msgid "Normal"
msgstr "正常"

#: ../../user_manual/getting_started/basic_concepts.rst:240
msgid ""
"The :menuselection:`Normal` blend mode just averages between colors "
"depending on how transparent the topmost color is."
msgstr ""
":menuselection:`正常` 混色模式按照上层图层的透明度来决定如何分配两个图层的颜"
"色。"

#: ../../user_manual/getting_started/basic_concepts.rst:242
msgid ""
"Krita has 76 blending modes, each doing slightly different things. Head over "
"to the :ref:`blending_modes` to learn more."
msgstr ""
"Krita 有 76 种混色模式，每种的效果都不尽相同。想要进一步了解它们的原理和用"
"法，请阅读 :ref:`blending_modes` 章节。"

#: ../../user_manual/getting_started/basic_concepts.rst:244
msgid ""
"Because we can see channels as grayscale images, we can convert grayscale "
"images into channels. Like for example, we can use a grayscale image for the "
"transparency. We call these **Masks**."
msgstr ""
"因为颜色通道可被视作灰阶图像，所以我们也可以把灰阶图像转换成颜色通道。例如，"
"我们可以把一张灰阶图像用作透明度通道。我们把这种用法叫做 **蒙版**。"

#: ../../user_manual/getting_started/basic_concepts.rst:249
msgid ""
"Masks are a type of sub-effect applied to a layer, usually driven by a "
"grayscale image."
msgstr "蒙版图层可以在别的图层上面产生附加效果，它们通常基于一张灰阶图像。"

#: ../../user_manual/getting_started/basic_concepts.rst:251
msgid ""
"The primary types of mask are :ref:`transparency_masks`, which allow you to "
"use a grayscale image to determine transparency, where black makes "
"everything transparent and white makes the pixel fully opaque."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:253
msgid ""
"You can paint on masks with any of the brushes, or convert a normal paint-"
"layer to a mask. The big benefit of masks is that you can make things "
"transparent without removing the underlying pixels. Furthermore, you can use "
"masks to reveal or hide a whole group layer at once!"
msgstr ""
"你可以使用任意笔刷在蒙版上绘画，也可以把一个正常的颜料图层转换成蒙版。使用蒙"
"版的意义在于你可以在不擦除原图层像素的情况下把它们变为透明。你也可以使用蒙版"
"为整个图层分组施加透明度。"

#: ../../user_manual/getting_started/basic_concepts.rst:255
msgid "For example, we have a white ghost lady here:"
msgstr "例如，这里有一位白色的女鬼："

#: ../../user_manual/getting_started/basic_concepts.rst:260
msgid ""
"But you can't really tell whether she's a ghost lady or just really really "
"white. If only we could give the idea that she floats. We right-click the "
"layer and add a transparency mask. Then, we select that mask and draw with a "
"black and white linear gradient so that the black is below."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:266
msgid ""
"Wherever the black is, there the lady now becomes transparent, turning her "
"into a real ghost!"
msgstr "只要黑色所到之处，她都会变成透明，这下她就变成名副其实的女鬼了！"

#: ../../user_manual/getting_started/basic_concepts.rst:268
msgid ""
"The name mask comes from traditional masking fluid and film. You may recall "
"the earlier comparison of selections to traditional masking fluid. "
"Selections too are stored internally as grayscale images, and you can save "
"them as a local selection which is kind of like a mask, or convert them to a "
"transparency mask."
msgstr ""
"蒙版这个名字最初起源于电影行业，它和前面提到的留白胶作用类似。Krita 的选区和"
"蒙版一样，也是作为灰阶图像被保存在程序内部的。你可以把选区保存成一个本地选"
"区，这其实就是一种蒙版，它们也可以被转换成透明度蒙版。"

#: ../../user_manual/getting_started/basic_concepts.rst:273
msgid ""
"We mentioned earlier that you can do maths with colors. But you can also do "
"maths with pixels, or groups of pixels or whole layers. In fact, you can "
"make Krita do all sorts of little operations on layers. We call these "
"operations **Filters**."
msgstr ""
"我们之前已经介绍过如何对颜色进行数学运算。你可以对某个像素、一组像素或者整个"
"图层的像素进行数学运算。Krita 可以对图层进行各种各样的有趣处理。我们把这些处"
"理叫做 **滤镜**。"

#: ../../user_manual/getting_started/basic_concepts.rst:275
msgid "Examples of such operations are:"
msgstr "以下面的滤镜处理为例："

#: ../../user_manual/getting_started/basic_concepts.rst:277
msgid "Desaturate"
msgstr "去色"

#: ../../user_manual/getting_started/basic_concepts.rst:278
msgid "This makes all the pixels turn gray."
msgstr "此滤镜会把所有的像素变成灰色。"

#: ../../user_manual/getting_started/basic_concepts.rst:279
msgid "Blur"
msgstr "模糊"

#: ../../user_manual/getting_started/basic_concepts.rst:280
msgid ""
"This averages the pixels with their neighbors, which removes sharp contrasts "
"and makes the whole image look blurry."
msgstr ""
"此滤镜会把相邻的像素平均化，对硬边和强烈的反差进行柔化，使得图像整体看起来模"
"糊柔和。"

#: ../../user_manual/getting_started/basic_concepts.rst:281
msgid "Sharpen"
msgstr "锐化"

#: ../../user_manual/getting_started/basic_concepts.rst:282
msgid ""
"This increases the contrast between pixels that had a pretty high contrast "
"to begin with."
msgstr "此滤镜会进一步增加本身反差较大的像素之间的反差。"

#: ../../user_manual/getting_started/basic_concepts.rst:284
msgid "Color to Alpha"
msgstr "颜色转为透明度"

#: ../../user_manual/getting_started/basic_concepts.rst:284
msgid "A popular filter which makes all of the chosen color transparent."
msgstr "此滤镜可以把所选的颜色变成透明。"

#: ../../user_manual/getting_started/basic_concepts.rst:289
msgid ".. image:: images/Krita_basic_filter_brush.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:289
msgid "Different filter brushes being used on different parts of the image."
msgstr "这张图像的不同部分被应用了不同的滤镜。"

#: ../../user_manual/getting_started/basic_concepts.rst:291
msgid ""
"Krita has many more filters available: you can read about them :ref:`here "
"<filters>`."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:294
msgid ":ref:`filter_brush_engine`"
msgstr "滤镜笔刷引擎"

#: ../../user_manual/getting_started/basic_concepts.rst:296
msgid ""
"Because many of these operations are per pixel, Krita allows you to use the "
"filter as part of the :ref:`filter_brush_engine`."
msgstr ""
"因为大多数的滤镜处理均针对像素，所以 Krita 也可以在 :ref:"
"`filter_brush_engine` 里面使用滤镜。"

#: ../../user_manual/getting_started/basic_concepts.rst:298
msgid ""
"In most image manipulation software, these are separate tools, but Krita has "
"it as a brush engine, allowing much more customization than usual."
msgstr ""
"在绝大多数图像处理软件中，滤镜和笔刷都是相互独立的工具。但 Krita 把滤镜也整合"
"在了笔刷引擎里面，你可以用它创作出更多样化的效果。"

#: ../../user_manual/getting_started/basic_concepts.rst:300
msgid ""
"This means you can make a brush that desaturates pixels, or a brush that "
"changes the hue of the pixels underneath."
msgstr "这意味着你可以制作一个有去色效果的笔刷，或者是一个能改变色相的笔刷。"

#: ../../user_manual/getting_started/basic_concepts.rst:303
msgid "Filter Layers, Filter Masks and Layer Styles"
msgstr "滤镜图层、滤镜蒙版和图层样式"

#: ../../user_manual/getting_started/basic_concepts.rst:305
msgid ""
"Krita also allows you to let the Filters be part of the layer stack, via :"
"ref:`filter_layers` and :ref:`filter_masks`. Filter Layers affect all the "
"layers underneath it in the same hierarchy. Transparency and transparency "
"masks on Filter Layers affect where the layer is applied."
msgstr ""
"Krita 还允许你把滤镜应用到图层组上，作为 :ref:`filter_layers` 和 :ref:"
"`filter_masks`。滤镜图层按照继承关系影响与其关联的图层。在滤镜图层上调整透明"
"度和应用透明度蒙版可以影响它们作用的图层和区域。"

#: ../../user_manual/getting_started/basic_concepts.rst:307
msgid ""
"Masks, on the other hand, can affect one single layer and are driven by a "
"grayscale image. They will also affect all layers in a group, much like a "
"transparency mask."
msgstr ""
"滤镜蒙版可以通过一张灰阶图像影响一个图层或者一个分组，这和透明度蒙版类似。"

#: ../../user_manual/getting_started/basic_concepts.rst:309
msgid ""
"We can use these filters to make our ghost lady look even more ethereal, by "
"selecting the ghost lady's layer, and then creating a clone layer. We then "
"right click and add a filter mask and use gaussian blur set to 10 or so "
"pixels.  The clone layer is then put behind the original layer, and set to "
"the blending mode '**Color Dodge**', giving her a definite spooky glow. You "
"can keep on painting on the original layer and everything will get updated "
"automatically!"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:314
msgid ""
"Layer Effects or Layer Styles are filter masks popularised by :program:"
"`Photoshop's` that are a little faster than regular masks, but not as "
"versatile. They are available by right clicking a layer and selecting 'layer "
"style'."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:317
msgid "Transformations"
msgstr "变形"

#: ../../user_manual/getting_started/basic_concepts.rst:319
msgid ""
"**Transformations** are kind of like filters, in that these are operations "
"done on the pixels of an image. We have a regular image and layer wide "
"transformations in the image and layer top menus, so that you may resize, "
"flip and rotate the whole image."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:321
msgid ""
"We also have the :ref:`crop_tool`, which only affects the canvas size, and "
"the :ref:`move_tool` which only moves a given layer. However, if you want "
"more control, Krita offers a :ref:`transform_tool`."
msgstr ""
"在工具箱里面，Krita 提供了 :ref:`crop_tool`，它只能用来修改画布大小；:ref:"
"`move_tool`，它只能用来移动一个图层。如果你需要更多控制，Krita 还准备了 :ref:"
"`transform_tool`。"

#: ../../user_manual/getting_started/basic_concepts.rst:327
msgid ""
"With this tool you can rotate and resize on the canvas, or put it in "
"perspective. Or you can use advanced transform tools, like the warp, cage "
"and liquify, which allow you to transform by drawing custom points or even "
"by pretending it's a transforming brush."
msgstr ""
"变形工具可以对画布上的对象进行旋转、调整大小、透视变化等操作。它还有一些更高"
"级的变形功能，如绘制控制点后对其进行拖动变形的网面变形和外框变形，还有仿佛是"
"一个变形笔刷一样的液化变形等。"

#: ../../user_manual/getting_started/basic_concepts.rst:330
msgid ":ref:`deform_brush_engine`"
msgstr "扭曲笔刷引擎"

#: ../../user_manual/getting_started/basic_concepts.rst:332
msgid ""
"Like the filter brush engine, Krita also has a Deform Brush Engine, which "
"allows you to transform with a brush. The deform is like a much faster "
"version of the Liquify transform tool mode, but in exchange, its results are "
"of much lower quality."
msgstr ""
":ref:`deform_brush_engine` 和滤镜笔刷引擎类似，可以让你使用笔刷进行变形操作。"
"扭曲笔刷就像是一个更快速的变形工具液化模式，但生成的图像品质要低许多。"

#: ../../user_manual/getting_started/basic_concepts.rst:337
msgid ".. image:: images/tools/Krita_transforms_deformvsliquefy.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:337
msgid ""
"Apple transformed into a pear with liquify on the left and deform brush on "
"the right."
msgstr "同样是把一个苹果变形为梨形，左图使用了液化变形，右图使用了扭曲笔刷。"

#: ../../user_manual/getting_started/basic_concepts.rst:339
msgid ""
"Furthermore, you can't apply the deform brush as a non-destructive mask."
msgstr "还有一点，扭曲笔刷无法在非破坏性蒙版上使用。"

#: ../../user_manual/getting_started/basic_concepts.rst:342
msgid ":ref:`transformation_masks`"
msgstr "变形蒙版"

#: ../../user_manual/getting_started/basic_concepts.rst:344
msgid ""
"Like filters, transforms can be applied as a non-destructive operation that "
"is part of the layer stack. Unlike filter and transparency masks however, "
"transform masks can't be driven by a grayscale image, for technical reasons. "
"You can use transform masks to deform clone and file layers as well."
msgstr ""
"和滤镜一样，变形也可以被作为一种非破坏性操作应用到图层组里。但和滤镜蒙版、透"
"明度蒙版不同的是， :ref:`transformation_masks` 由于其技术特点，并非基于灰阶图"
"像。你还可以使用变形蒙版来对克隆或文件图层进行变形。"

#: ../../user_manual/getting_started/basic_concepts.rst:348
msgid ":ref:`animation`"
msgstr "动画制作"

#: ../../user_manual/getting_started/basic_concepts.rst:353
msgid ""
"From version 3.0 onwards, Krita got raster animation support. You can use "
"the timeline, animation and onionskin dockers, plus Krita's amazing variety "
"of brushes to do raster based animations, export those, and then turn them "
"into movies or gifs."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:356
msgid "Assistants, Grids and Guides"
msgstr "辅助尺、网格和导线"

#: ../../user_manual/getting_started/basic_concepts.rst:358
msgid ""
"With all this technical stuff, you might forget that Krita is a painting "
"program. Like how when working with traditional medium, as an illustrator, "
"you can have all sorts of equipment to make drawing easier, Krita also "
"offers a variety of tools:"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:363
msgid ".. image:: images/assistants/Krita_basic_assistants.png"
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:363
msgid "Krita's vanishing point assistants in action"
msgstr "Krita 的消失点辅助尺正在工作"

#: ../../user_manual/getting_started/basic_concepts.rst:365
msgid ":ref:`grids_and_guides_docker`"
msgstr ":ref:`grids_and_guides_docker`"

#: ../../user_manual/getting_started/basic_concepts.rst:366
msgid ""
"A very straightforward guiding tool which shows grids or guiding lines that "
"can be configured."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:367
msgid ":ref:`snapping`"
msgstr ":ref:`snapping`"

#: ../../user_manual/getting_started/basic_concepts.rst:368
msgid ""
"You can snap to all sorts of things. Grids, guides, extensions, orthogonals, "
"image centers and bounding boxes."
msgstr ""
"你可以把对象或绘画笔迹吸附到各种辅助工具上，如网格、导线、延长线、正交线、图"
"像中心点和外框等处。"

#: ../../user_manual/getting_started/basic_concepts.rst:370
msgid ":ref:`painting_with_assistants`"
msgstr ":ref:`painting_with_assistants`"

#: ../../user_manual/getting_started/basic_concepts.rst:370
msgid ""
"Because you can hardly put a ruler against your tablet to help you draw, the "
"assistants are there to help you draw concentric circles, perspectives, "
"parallel lines and other easily forgotten but tricky to draw details. Krita "
"allows you to snap to these via the tool options as well."
msgstr ""
"在数位板上面使用尺子不太现实，所以 Krita 专门为此准备了一套绘画辅助尺工具。它"
"们可以帮助你随心所欲地绘制同心圆、透视、平行线，无需与复杂的绘画原理打交道。"
"只需在工具选项勾选“吸附到辅助尺”，你就可以把笔迹吸附到这些辅助尺上面进行绘"
"画。"

#: ../../user_manual/getting_started/basic_concepts.rst:372
msgid ""
"These guides are saved into Krita's native format, which means you can pick "
"up your work easily afterward."
msgstr ""

#: ../../user_manual/getting_started/basic_concepts.rst:375
msgid "Customization"
msgstr "定制化"

#: ../../user_manual/getting_started/basic_concepts.rst:377
msgid "This leads to the final concept: customization."
msgstr "我们要介绍的最后一个概念是定制化。"

#: ../../user_manual/getting_started/basic_concepts.rst:379
msgid ""
"In addition to rearranging the dockers according to your preferences, Krita "
"provides and saves your configurations as :ref:`resource_workspaces`. This "
"is the button at the top right."
msgstr ""
"除了按照个人喜好自由安排工具面板外，Krita 还可以让你把这些配置保存为 :ref:"
"`resource_workspaces`。工作空间的管理按钮在窗口的右上角。"

#: ../../user_manual/getting_started/basic_concepts.rst:381
msgid ""
"You can also configure the toolbar via :menuselection:`Settings --> "
"Configure Toolbars`, as well as the shortcuts under both :menuselection:"
"`Settings --> Configure Krita --> Configure Shortcuts` and :menuselection:"
"`Settings --> Configure Krita --> Canvas Input Settings`."
msgstr ""
"要配置工具栏，点击菜单栏的 :menuselection:`设置 --> 配置工具栏`；要配置快捷"
"键，点击菜单栏的 :menuselection:`设置 --> 配置 Krita --> 键盘快捷键` 和 :"
"menuselection:`设置 --> 配置 Krita --> 画布输入设置`。"
