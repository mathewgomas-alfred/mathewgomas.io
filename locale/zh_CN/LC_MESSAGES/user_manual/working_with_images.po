msgid ""
msgstr ""
"Project-Id-Version: kdeorg\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-04 03:33+0200\n"
"PO-Revision-Date: 2019-05-05 22:27\n"
"Last-Translator: Guo Yunhe (guoyunhe)\n"
"Language-Team: Chinese Simplified\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: kdeorg\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /kf5-trunk/messages/www/"
"docs_krita_org_user_manual___working_with_images.pot\n"

#: ../../user_manual/working_with_images.rst:None
msgid ".. image:: images/Infinite-canvas.png"
msgstr ""

#: ../../user_manual/working_with_images.rst:1
msgid "Detailed steps on how images work in Krita"
msgstr "详细介绍在 Krita 里面如何处理图像。"

#: ../../user_manual/working_with_images.rst:12
#: ../../user_manual/working_with_images.rst:58
msgid "Metadata"
msgstr "元数据"

#: ../../user_manual/working_with_images.rst:12
msgid "Image"
msgstr ""

#: ../../user_manual/working_with_images.rst:12
msgid "Document"
msgstr ""

#: ../../user_manual/working_with_images.rst:12
msgid "Raster"
msgstr ""

#: ../../user_manual/working_with_images.rst:12
msgid "Vector"
msgstr ""

#: ../../user_manual/working_with_images.rst:17
msgid "Working with Images"
msgstr "理解和处理图像"

#: ../../user_manual/working_with_images.rst:19
msgid ""
"Computers work with files and as a painting program, Krita works with images "
"as the type of file it creates and manipulates."
msgstr ""
"计算机可以处理不同类型的文件，而作为绘画程序，Krita 能够创建和处理图像文件。"

#: ../../user_manual/working_with_images.rst:23
msgid "What do Images Contain?"
msgstr "图像文件包含的数据"

#: ../../user_manual/working_with_images.rst:25
msgid ""
"If you have a text document, it of course contains letters, strung in the "
"right order, so the computer loads them as coherent sentences."
msgstr ""
"如果你创建了一个文本文档，它里面文字的字母会依照某种顺序进行排列，这样计算机"
"才能把字母读取并显示成连贯的句子。这种排序方式就是该文本文档的格式。每种文件"
"都有自己的格式，图像文件也不例外。Krita 的图像文件包含下列数据："

#: ../../user_manual/working_with_images.rst:29
msgid "Raster Data"
msgstr "栅格数据"

#: ../../user_manual/working_with_images.rst:31
msgid ""
"This is the main data on the paint layers you make. So these are the strokes "
"with the paint brush and look pixely up close. A multi-layer file will "
"contain several of such layers, that get overlaid on top of each other so "
"make the final image."
msgstr ""
"这里保存了颜料图层的主要数据。你用手绘笔刷工具绘制的笔画和颜色就被存放在这"
"里。栅格图像记录了每一个像素的颜色，图像被放大时会产生马赛克。多图层文档可以"
"包含多个栅格图层，它们从上到下依次叠放组成了最终图像。"

#: ../../user_manual/working_with_images.rst:36
msgid "A single layer file will usually only contain raster data."
msgstr "单层图像文件通常只包含栅格数据。"

#: ../../user_manual/working_with_images.rst:39
msgid "Vector Data"
msgstr "矢量数据"

#: ../../user_manual/working_with_images.rst:41
msgid ""
"These are mathematical operations that tell the computer to draw pixels on a "
"spot. This makes them much more scalable, because you just tell the "
"operation to make the coordinates 4 times bigger to scale it up. Due to this "
"vector data is much more editable, lighter, but at the same time it's also "
"much more CPU intensive."
msgstr ""
"这里保存的是一些数学运算，计算机通过这些运算决定如何绘制画面，这个特点使得它"
"们具有更好的伸缩性。你只需要告诉该运算把坐标值增大 4 倍，生成的图像就可以跟着"
"放大，而放大后的细节不会有任何损失。矢量数据的体积更小，可编辑性也更好，但代"
"价是消耗更多的 CPU 资源。"

#: ../../user_manual/working_with_images.rst:48
msgid "Operation Data"
msgstr "操作数据"

#: ../../user_manual/working_with_images.rst:50
msgid ""
"Stuff like the filter layers, that tells Krita to change the colors of a "
"layer, but also transparency masks, group layer and transformation masks are "
"saved to multi-layer files. Being able to load these depend on the software "
"that initially made the file. So Krita can load and save groups, "
"transparency masks and layer effects from PSD, but not load or save "
"transform masks."
msgstr ""
"这里保存了软件在各种图层中进行的操作，例如用来调整其他图层颜色的滤镜图层、透"
"明度蒙版、分组图层和变形蒙版等。不同软件的操作数据格式有所差别，Krita 对这些"
"数据的支持情况取决于文件是由哪些软件生成的。例如，Krita 能够载入和保存 PSD 文"
"件的分组、透明度蒙版和图层样式，但无法载入和保存它的变形蒙版。"

#: ../../user_manual/working_with_images.rst:60
msgid ""
"Metadata is information like the creation date, author, description and also "
"information like DPI."
msgstr ""
"元数据是一组记录了创建日期、作者、描述文字等信息的数据，它也包括了 DPI (每英"
"寸点数) 等文件格式的特有信息。"

#: ../../user_manual/working_with_images.rst:64
msgid "Image size"
msgstr "图像大小"

#: ../../user_manual/working_with_images.rst:66
msgid ""
"The image size is the dimension and resolution of the canvas. Image size has "
"direct effect file size of the Krita document. The more pixels that need to "
"be remembered and the higher the bit depth of the color, the heavier the "
"resulting file will be."
msgstr ""
"图像大小包括了两个方面：画布的尺寸和分辨率，它们的大小直接影响 Krita 文档的体"
"积。需要记录的像素越多，颜色的位深度越高，则生成的文件体积越大。"

#: ../../user_manual/working_with_images.rst:72
msgid "DPI/PPI"
msgstr "DPI 与 PPI"

#: ../../user_manual/working_with_images.rst:74
msgid ""
"**DPI** stands for *Dots per Inch*, **PPI** stands for *Pixels per Inch*. In "
"printing industry, suppose if your printer prints at 300 **DPI**. It means "
"it is actually putting 300 dots of colors in an area equal to an Inch. This "
"means the number of pixels your artwork has in a relative area of an inch."
msgstr ""
"**DPI** 是 *Dots Per Inch*，每英寸点数的缩写，而 **PPI** 是 *Pixel Per "
"Inch*，每英寸像素的缩写。DPI 与打印的精细程度有关，而 PPI 则与打印尺寸有关。"
"在印刷行业里面，如果一台打印机按 300 **DPI** 进行打印，它在每平方英寸的面积里"
"面可以打印 300 个墨点。为了发挥出这台打印机的真正性能，打印的图像至少要在每平"
"方英寸的面积里提供 300 个像素的信息。"

#: ../../user_manual/working_with_images.rst:80
msgid ""
"**DPI** is the concern of the printer, and artists while creating artwork "
"should keep **PPI** in mind. According to the **PPI** you have set, the "
"printers can decide how large your image should be on a piece of paper."
msgstr ""
"**DPI** 是打印机的特性决定的，它并不直接影响图像的打印尺寸大小。真正对打印大"
"小起决定作用的是 **PPI** ，它直接描述了像素和打印尺寸之间的关系。换句话说，一"
"张图像的 **PPI** 决定了它每个像素被打印在纸张上的大小，而 **DPI** 反映了一台"
"打印机的打印精细程度。画手在创作时更应关注 **PPI** 。"

#: ../../user_manual/working_with_images.rst:85
msgid "Some standards:"
msgstr "现列出部分 PPI 标准如下："

#: ../../user_manual/working_with_images.rst:88
msgid ""
"This is the default PPI of monitors as assumed by all programs. It is not "
"fully correct, as most monitors these days have 125 PPI or even 300 PPI for "
"the retina devices. None the less, when making an image for computer "
"consumption, this is the default."
msgstr ""
"这是所有程序默认的显示器 PPI。这个数值不一定准确，因为新型显示器普遍已经达到 "
"125 PPI，使用视网膜屏幕的设备甚至可以超过 300 PPI。尽管如此，它依然是制作屏幕"
"显示用图像的默认设置。"

#: ../../user_manual/working_with_images.rst:90
msgid "72 PPI"
msgstr "72 PPI"

#: ../../user_manual/working_with_images.rst:92
msgid "120 PPI"
msgstr "120 PPI"

#: ../../user_manual/working_with_images.rst:93
msgid "This is often used as a standard for low-quality posters."
msgstr "这个数值经常被用作低质量海报的标准。"

#: ../../user_manual/working_with_images.rst:94
msgid "300 PPI"
msgstr "300 PPI"

#: ../../user_manual/working_with_images.rst:95
msgid "This is the minimum you should use for quality prints."
msgstr "这个数值是高质量印刷的最低限度。"

#: ../../user_manual/working_with_images.rst:97
msgid "600 PPI"
msgstr "600 PPI"

#: ../../user_manual/working_with_images.rst:97
msgid "The quality used for line art for comics."
msgstr "漫画线稿使用的品质。"

#: ../../user_manual/working_with_images.rst:100
msgid "Color depth"
msgstr "颜色位深度"

#: ../../user_manual/working_with_images.rst:102
msgid ""
"We went over color depth in the :ref:`Color Management page "
"<general_concept_color>`. What you need to understand is that Krita has "
"image color spaces, and layer color spaces, the latter which can save memory "
"if used right. For example, having a line art layer in grayscale can half "
"the memory costs."
msgstr ""
"我们在 :ref:`色彩管理 <general_concept_color>` 章节对颜色的位深度进行了探讨。"
"Krita 不但可以为图像指定色彩空间，还可以为图层指定色彩空间。我们可以通过巧用"
"图层色彩空间来节省内存。例如，把线稿图层设为灰阶，可将内存的消耗量减半。"

#: ../../user_manual/working_with_images.rst:108
msgid "Image color space vs layer color space vs conversion."
msgstr "图像色彩空间、图层色彩空间、色彩转换"

#: ../../user_manual/working_with_images.rst:110
msgid ""
"Because there's a difference between image color space and layer color "
"space, you can change only the image color space in :menuselection:`Image --"
"> Properties` which will leave the layers alone. But if you want to change "
"the color space of the file including all the layers you can do it by going "
"to :menuselection:`Image --> Convert Image Color Space` this will convert "
"all the layers color space as well."
msgstr ""
"图像和图层的色彩空间是被区别对待的。要修改图像的色彩空间，可到菜单栏的 :"
"menuselection:`图像 --> 属性` 里面进行，但这些选项不会改变图层的颜色。如果需"
"要把图像连同所有图层的色彩空间一起进行转换，可到菜单栏的 :menuselection:`图"
"像 --> 转换图像色彩空间`。"

#: ../../user_manual/working_with_images.rst:116
msgid "Author and Description"
msgstr "作者和描述信息"

#: ../../user_manual/working_with_images.rst:119
msgid ".. image:: images/document_information_screen.png"
msgstr ""

#: ../../user_manual/working_with_images.rst:120
msgid ""
"Krita will automatically save who created the image into your image's "
"metadata. Along with the other data such as time and date of creation and "
"modification, Krita also shows editing time of a document in the document "
"information dialog, useful for professional illustrators, speed-painters to "
"keep track of the time they worked on artwork for billing purposes. It "
"detects when you haven’t performed actions for a while, and has a precision "
"of ±60 seconds. You can empty it in the document info dialog and of course "
"by unzipping you .kra file and editing the metadata there."
msgstr ""
"Krita 会自动把图像的创建者保存到文件的元数据。Krita 的文档信息对话框除了显示"
"文件的创建、修改日期和时间外，还能显示文档的总编辑时间长度，方便按工时计费。"
"如果你有一段时间没有进行操作，Krita 会及时发现并停止计时，精度为 ±60 秒。你可"
"以在文件信息对话框清空计时信息，也可以在解压缩该文件后编辑相关的元数据。"

#: ../../user_manual/working_with_images.rst:130
msgid ""
"These things can be edited in :menuselection:`File --> Document "
"Information`, and for the author's information :menuselection:`Settings --> "
"Configure Krita --> Author Information`. Profiles can be switched under :"
"menuselection:`Settings --> Active Author Profile`."
msgstr ""
"要编辑文档信息，可在菜单栏点击 :menuselection:`文件 --> 文档信息`。要编辑作者"
"信息，可在菜单栏点击 :menuselection:`设置 --> 配置 Krita --> 作者`。要切换作"
"者档案，可在菜单栏点击 :menuselection:`设置 --> 当前作者档案`。"

#: ../../user_manual/working_with_images.rst:133
msgid "Setting the canvas background color"
msgstr "设置画布背景色"

#: ../../user_manual/working_with_images.rst:135
msgid ""
"You can set the canvas background color via :menuselection:`Image --> Image "
"Background Color and Transparency`. This allows you to turn the background "
"color non-transparent and to change the color. This is also useful for "
"certain file formats which force a background color instead of transparency. "
"PNG and JPG export use this color as the default color to fill in "
"transparency if you do not want to export transparency."
msgstr ""
"要设置画布的背景色，在菜单栏点击 :menuselection:`图像 --> 图像背景色与透明度"
"`，你可以在这里更改背景色，或者把背景色改为不透明。这对于那些强制使用不透明背"
"景的图像格式有用。如果你不保存透明度，PNG 和 JPG 在导出时会使用此颜色作为背"
"景。"

#: ../../user_manual/working_with_images.rst:142
msgid ""
"If you come in from a program like :program:`Paint Tool Sai`, then using "
"this option, or using :guilabel:`Set Canvas Background Color` in the new "
"file options, will allow you to work in a slightly more comfortable "
"environment, where transparency isn't depicted with checkered boxes."
msgstr ""
"如果你习惯使用 :program:`Paint Tool SAI` 这样的程序，不希望见到透明度棋盘格背"
"景，你可以调整上述选项，也可以在新建文件对话框的“内容”页面中通过 :guilabel:`"
"背景色` 和 :guilabel:`背景不透明度` 选项更改新文档的默认值。"

#: ../../user_manual/working_with_images.rst:148
msgid "Basic transforms"
msgstr "基本变形"

#: ../../user_manual/working_with_images.rst:150
msgid "There are some basic transforms available in the image menu."
msgstr "你可以在 :guilabel:`图像` 菜单中进行一些基本的变形操作。"

#: ../../user_manual/working_with_images.rst:152
msgid "Shear Image"
msgstr "切变图像"

#: ../../user_manual/working_with_images.rst:153
msgid "This will allow you to skew the whole image and its layers."
msgstr "此功能可以把图像和所含的全部图层进行斜向扭曲。"

#: ../../user_manual/working_with_images.rst:154
msgid "Rotate"
msgstr "旋转"

#: ../../user_manual/working_with_images.rst:155
msgid "This will allow you to rotate the image and all its layers quickly."
msgstr "此功能可以把图像和所含的全部图层进行旋转。"

#: ../../user_manual/working_with_images.rst:157
msgid "Mirror Horizontal/Vertical"
msgstr "水平/垂直翻转"

#: ../../user_manual/working_with_images.rst:157
msgid "This will allow you to mirror the whole image with all its layers."
msgstr "此功能可以把图像和所含的全部图层进行翻转。"

#: ../../user_manual/working_with_images.rst:159
msgid "But there are more options than that..."
msgstr "除此之外我们还有更多的相关选项，下面将继续介绍。"

#: ../../user_manual/working_with_images.rst:162
msgid "Cropping and resizing the canvas"
msgstr "裁切和调整画布大小"

#: ../../user_manual/working_with_images.rst:164
msgid ""
"You can crop and image with the :ref:`crop_tool`, to cut away extra space "
"and improve the composition."
msgstr ""
"要对图像进行裁切，可使用 :ref:`裁切工具`。此功能可用于切除多余的空白和改善构"
"图。"

#: ../../user_manual/working_with_images.rst:168
msgid "Trimming"
msgstr "修剪"

#: ../../user_manual/working_with_images.rst:170
msgid ""
"Using :menuselection:`Image --> Trim to Layer`, Krita resizes the image to "
"the dimensions of the layer selected. Useful for when you paste a too large "
"image into the layer and want to resize the canvas to the extent of this "
"layer."
msgstr ""
"使用菜单栏中 :menuselection:`图像 --> 修剪至当前图层`，Krita 可以把图像的尺寸"
"调整为当前已选中图层的大小。如果你粘贴进来的内容超出了图像的尺寸，你可以使用"
"此功能把图像尺寸扩展至所粘贴图层的大小。"

#: ../../user_manual/working_with_images.rst:174
msgid ""
":menuselection:`Image --> Trim to Selection` is a faster cousin to the crop "
"tool. This helps us to resize the canvas to the dimension of any active "
"selection. This is especially useful with right clicking the layer on the "
"layer stack and choosing :guilabel:`Select Opaque`. :menuselection:`Image --"
"> Trim to Selection` will then crop the canvas to the selection bounding box."
msgstr ""
"菜单栏的 :menuselection:`图像 --> 修剪至选区` 功能是裁切工具的一种快速替代"
"品，它可以把画布尺寸调整为当前活动选区的大小。其中一种用法是在图层列表上右键"
"单击一个图层，选择 :guilabel:`选择不透明区域`，然后在菜单栏选择 :"
"menuselection:`图像 --> 修剪至选区`，这样即可按照该选区 (也就是所选图层的内容"
"边界) 的水平和垂直大小对图像进行裁切。"

#: ../../user_manual/working_with_images.rst:180
msgid ""
":menuselection:`Image --> Trim to Image Size` is actually for layers, and "
"will trim all layers to the size of the image, making your files lighter by "
"getting rid of invisible data."
msgstr ""
"菜单栏的 :menuselection:`图像 --> 修剪至图像大小` 功能可以按照图像尺寸对所有"
"图层进行修剪，去除图像边框之外的不可见区域的内容，减小文件的体积。"

#: ../../user_manual/working_with_images.rst:185
msgid "Resizing the canvas"
msgstr "调整画布大小"

#: ../../user_manual/working_with_images.rst:187
msgid ""
"You can also resize the canvas via :menuselection:`Image --> Resize Canvas` "
"(or :kbd:`Ctrl + Alt + C`). The dialog box is shown below."
msgstr ""
"你还可以通过菜单栏的 :menuselection:`图像-> 调整画布大小` (或 :kbd:`Ctrl + "
"Alt + C` ) 来对画布的大小进行调整。该对话框显示如下。"

#: ../../user_manual/working_with_images.rst:191
msgid ".. image:: images/Resize_Canvas.png"
msgstr ""

#: ../../user_manual/working_with_images.rst:192
msgid ""
"In this, constraint proportions will make sure the height and width stay in "
"proportion to each other as you change them. Offset indicates where the new "
"canvas space is added around the current image. You basically decide where "
"the current image goes (if you press the left-button, it'll go to the center "
"left, and the new canvas space will be added to the right of the image)."
msgstr ""
":guilabel:`保持宽高比` 选项可确保图像的宽度和高度和修改之前保持相同的比例。:"
"guilabel:`偏移` 选项决定了画布四周各个方向的尺寸增减量，也就是控制当前画布相"
"对于修改后画布的位置。点击 :guilabel:`锚点` 的任意一个方向可以让当前画布与修"
"改后画布沿该边 (角) 对齐。例如，点击左边箭头，则画布在水平方向上的全部大小增"
"减会发生在它的右边。"

#: ../../user_manual/working_with_images.rst:199
msgid ""
"Another way to resize the canvas according to the need while drawing is when "
"you scroll away from the end of the canvas, you can see an arrow appear. "
"Clicking this will extend the canvas in that direction. You can see the "
"arrow marked in red in the example below:"
msgstr ""
"调整图像大小的另一个办法是把画布视图朝一个方向滚动，直到在那个方向的边框处出"
"现一个箭头按钮。点击它，画布就会朝该方向扩展。示例如下："

#: ../../user_manual/working_with_images.rst:209
msgid "Resizing the image"
msgstr "缩放图像至新尺寸"

#: ../../user_manual/working_with_images.rst:211
msgid ""
":guilabel:`Scale Image to New Size` allows you to resize the whole image. "
"Also, importantly, this is where you can change the resolution or *upres* "
"your image. So for instance, if you were initially working at 72 PPI to "
"block in large shapes and colors, images, etc... And now you want to really "
"get in and do some detail work at 300 or 400 PPI this is where you would "
"make the change."
msgstr ""
":guilabel:`缩放图像至新尺寸` 可对整个图像按比例缩放。如果你需要放大图像尺寸，"
"应使用此功能。例如，你的图像的分辨率原来是 72 PPI，你在这个低分辨率下面规划完"
"了大致的配色和构图，下一步就要刻画细节了，于是你可以在这里把分辨率调高到 300 "
"或者 400 PPI。"

#: ../../user_manual/working_with_images.rst:218
msgid ""
"Like all other dialogs where a chain link appears, when the chain is linked "
"the aspect ratio is maintained. To disconnect the chain, just click on the "
"links and the two halves will separate."
msgstr ""
"和所有显示了锁链按钮的对话框一样，这个对话框的锁链按钮用来锁定图像的宽高比。"
"点击该按钮可以解除锁定，让你可以单独控制宽度和高度的数值。"

#: ../../user_manual/working_with_images.rst:224
msgid ".. image:: images/Scale_Image_to_New_Size.png"
msgstr ""

#: ../../user_manual/working_with_images.rst:226
msgid "Separating Images"
msgstr "分离图像"

#: ../../user_manual/working_with_images.rst:229
msgid ".. image:: images/Separate_Image.png"
msgstr ""

#: ../../user_manual/working_with_images.rst:230
msgid ""
"This powerful image manipulation feature lets you separate an image into its "
"different components or channels."
msgstr "这是一个功能强大的图像处理功能，可以把一张图像的颜色通道分离开来。"

#: ../../user_manual/working_with_images.rst:233
msgid ""
"This is useful for people working in print, or people manipulating game "
"textures. There's no combine functionality, but what you can do, if using "
"colored output, is to set two of the channels to the addition :ref:"
"`blending_modes`."
msgstr ""
"此功能对于印刷和处理游戏材质尤为有用。虽然 Krita 没有提供反向合并的功能，但你"
"可以把分离出来的图层设为“相加” :ref:`blending_modes` 来模拟合并后的效果。"

#: ../../user_manual/working_with_images.rst:238
msgid ""
"For grayscale images in the RGB space, you can use the copy red, copy green "
"and copy blue blending modes, with using the red one for the red channel "
"image, etc."
msgstr ""
"对于从 RGB 图像分离得到的各通道灰阶图像，我们可以依次把红、绿、蓝通道的图像的"
"混色模式设为“复制红通道”、“复制绿通道”、“复制蓝通道”。"

#: ../../user_manual/working_with_images.rst:243
msgid "Saving, Exporting and Opening Files"
msgstr "保存、导出和打开文件"

#: ../../user_manual/working_with_images.rst:245
msgid ""
"When Krita creates or opens a file, it has a copy of the file in memory, "
"that it edits. This is part of the way how computers work: They make a copy "
"of their file in the RAM. Thus, when saving, Krita takes its copy and copies "
"it over the existing file. There's a couple of tricks you can do with saving."
msgstr ""
"Krita 在创建或者打开一个文件之后，它会把该文件的数据保存一份副本到内存里，以"
"供它编辑时使用。这是计算机的工作原理所决定的：它们要把文件加载到内存里面才能"
"对其进行操作。在保存文件时，Krita 会用内存中的副本覆盖硬盘上的已有文件。图像"
"的打开和保存操作有下面几种："

#: ../../user_manual/working_with_images.rst:252
msgid ""
"Krita saves the current image in its memory to a defined place on the hard-"
"drive. If the image hadn't been saved before, Krita will ask you where to "
"save it."
msgstr ""
"Krita 会把当前内存中的图像保存到硬盘上的指定位置。如果该文件之前未被保存过，"
"Krita 会询问应该把它保存在什么位置。"

#: ../../user_manual/working_with_images.rst:253
msgid "Save"
msgstr "保存"

#: ../../user_manual/working_with_images.rst:256
msgid "Save As"
msgstr "另存为"

#: ../../user_manual/working_with_images.rst:256
msgid ""
"Make a copy of your current file by saving it with a different name. Krita "
"will switch to the newly made file as its active document."
msgstr ""
"把当前打开的文件在另一个位置保存为副本。保存结束后 Krita 会切换到该新文件继续"
"编辑。"

#: ../../user_manual/working_with_images.rst:258
msgid "Open"
msgstr "打开"

#: ../../user_manual/working_with_images.rst:259
msgid "Open a saved file. Fairly straightforward."
msgstr "打开已有文件。"

#: ../../user_manual/working_with_images.rst:261
msgid ""
"Save a file to a new location without actively opening it. Useful for when "
"you are working on a layered file, but only need to save a flattened version "
"of it to a certain location."
msgstr ""
"把一个文件保存一个副本到新位置，但保存后不切换到导出的文件，而是继续使用当前"
"文件进行编辑。如果你在处理一个多图层文件，需要输出一个平整后的图像与他人分"
"享，这个功能将非常有用。"

#: ../../user_manual/working_with_images.rst:262
msgid "Export"
msgstr "导出"

#: ../../user_manual/working_with_images.rst:265
msgid ""
"This is a bit of an odd one, but it opens a file, and forgets where you "
"saved it to, so that when pressing 'save' it asks you where to save it. This "
"is also called 'import' in other programs."
msgstr ""
"这个功能不太好理解，它所做的是打开一个已有文件，但在保存时会询问一个新位置来"
"把结果保存为原始文件的一个副本。在其他程序里此功能叫做“导入”。"

#: ../../user_manual/working_with_images.rst:266
msgid "Open Existing Document As Untitled Document"
msgstr "将已有文档作为无标题文档打开"

#: ../../user_manual/working_with_images.rst:269
msgid "Create Copy from Current Image"
msgstr "从当前图像创建副本"

#: ../../user_manual/working_with_images.rst:269
msgid ""
"Makes a new copy of the current image. Similar to Open Existing Document As "
"Untitled Document, but then with already opened files."
msgstr ""
"为当前图像制作一个副本。和“将已有文档作为无标题文档打开”类似，但对象换成了当"
"前打开了的文件。"

#: ../../user_manual/working_with_images.rst:272
msgid "Save Incremental Version"
msgstr "保存增量版本"

#: ../../user_manual/working_with_images.rst:272
msgid ""
"Saves the current image as 'filename'\\_XXX.kra and switches the current "
"document to it."
msgstr "将当前图像保存为“文件名 \\_XXX.kra”，并将当前文档切换到该图像。"

#: ../../user_manual/working_with_images.rst:275
msgid ""
"Copies and renames the last saved version of your file to a back-up file and "
"saves your document under the original name."
msgstr "将上次保存的版本复制一份并重命名为备份文件，然后用当前图像覆盖原文件。"

#: ../../user_manual/working_with_images.rst:276
msgid "Save Incremental Backup"
msgstr "保存增量备份"

#: ../../user_manual/working_with_images.rst:279
msgid ""
"Since Krita's file format is compressed data file, in case of a corrupt or "
"broken file you can open it with archive managers and extract the contents "
"of the layers. This will help you to recover as much as possible data from "
"the file. On Windows, you will need to rename it to filename.zip to open it."
msgstr ""
"Krita 的工作文件格式实质上是一个压缩包，万一该文件发生了损坏，你还可以用解压"
"缩软件把它包含的图层等内容解压出来，尽可能恢复更多的数据。在 Windows 环境下，"
"你需要把文件的扩展名改为 ZIP 才能双击打开。"
