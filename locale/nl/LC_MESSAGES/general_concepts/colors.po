# Dutch translations for Krita Manual package
# Nederlandse vertalingen voor het pakket Krita Manual.
# Copyright (C) licensed under the GNU Free Documentation License 1.3+ unless stated otherwise
# This file is distributed under the same license as the Krita Manual package.
#
# Automatically generated, 2019.
# Freek de Kruijf <freekdekruijf@kde.nl>, 2019.
# Lo Fernchu <lofernchu@zonnet.nl>, 2019.
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-04 03:33+0200\n"
"PO-Revision-Date: 2019-05-04 13:33+0200\n"
"Last-Translator: Freek de Kruijf <freekdekruijf@kde.nl>\n"
"Language-Team: Dutch <kde-i18n-nl@kde.org>\n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Lokalize 19.04.0\n"

#: ../../general_concepts/colors.rst:None
msgid ".. image:: images/color_category/Krita_color_mixing_natural_order.png"
msgstr ".. image:: images/color_category/Krita_color_mixing_natural_order.png"

#: ../../general_concepts/colors.rst:None
msgid ""
".. image:: images/color_category/Krita_color_mixing_traditional_order.png"
msgstr ""
".. image:: images/color_category/Krita_color_mixing_traditional_order.png"

#: ../../general_concepts/colors.rst:None
msgid ".. image:: images/color_category/Rgbcolorcube_2.png"
msgstr ".. image:: images/color_category/Rgbcolorcube_2.png"

#: ../../general_concepts/colors.rst:None
msgid ".. image:: images/color_category/Rgbcolorcube_HSI.png"
msgstr ".. image:: images/color_category/Rgbcolorcube_HSI.png"

#: ../../general_concepts/colors.rst:1
msgid "The Colors Category."
msgstr "De categorie kleuren."

#: ../../general_concepts/colors.rst:16
msgid "Colors"
msgstr "Kleuren"

#: ../../general_concepts/colors.rst:18
msgid "Okay, so... Let's talk **colors**!"
msgstr "Ok, laten we over **kleuren** praten!"

#: ../../general_concepts/colors.rst:20
msgid ""
"Colors are pretty, and they're also *pretty* fundamental to painting. When "
"painting, we want to be able to access and manipulate colors easily to do "
"fun stuff like :ref:`mixing <mixing_colors>` them together or matching them "
"to create visual **harmony** or **contrast**. We also want to be able to "
"quickly find our favorite shades of red or favorite tints of blue without "
"thinking or working too hard. All of this becomes even more important the "
"more colors we have access to!"
msgstr ""
"Kleuren zijn mooi, en ze zijn ook *mooi* fundamenteel bij het schilderen. "
"Als we schilderen, dan willen we makkelijk kleuren kunnen selecteren en deze "
"kunnen bewerken zoals :ref:`mengen <mixing_colors>` of ze laten "
"overeenstemmen om **harmonie** of **contrast** te creëren. We willen ook "
"makkelijk onze favoriete kleur rood of blauw kunnen vinden zonder teveel te "
"hoeven nadenken. Dit word nog belangrijker als we veel kleuren tot onze "
"beschikking hebben!"

#: ../../general_concepts/colors.rst:22
msgid ""
"Naturally, the first thing we do is organize the colors, usually based on "
"what we see in nature. For example, we tend to order hues in the order that "
"they appear in a rainbow, and we think about brightness of values as a tonal "
"range from white to black. Of course, nature itself is tied to physics, and "
"the order of hues and the concept of brightness has everything to do with "
"the wavelength and energy of light as it bounces around and eventually "
"enters our eyes."
msgstr ""
"Natuurlijk is het indelen van de kleuren het eerste wat we doen, meestal "
"gebaseerd op wat we in de natuur zien. Bijvoorbeeld, we hebben de neiging om "
"de tinten in te delen in de volgorde die ze hebben in een regenboog, en we "
"denken over helderheid-waarden in een reeks die van wit naar zwart gaat. "
"Uiteraard is de natuur zelf gebonden aan de natuurwetten, en de volgorde van "
"de tinten en het idee van helderheid hebben alles van doen met de golflengte "
"van licht als het weerkaatst en uiteindelijk onze ogen raakt."

#: ../../general_concepts/colors.rst:28
msgid ""
"In the case of *traditional media*, we order the colors (**hues**) by how "
"they result from mixes of other colors, starting with the *subtractive* "
"**primary colors**: cyan, magenta, yellow. Mixing each primary color with "
"each other reveals three secondary colors: violet, orange, and green. Mixing "
"between those colors creates tertiary colors, and so on - the variations of "
"hues between each named color are practically limitless! Thinking of colors "
"in this way creates a circle of hues that artists call *\"the color wheel"
"\"*! Each one of these hues can be made **lighter (tint)** or **darker "
"(shade)** by mixing with white or black, respectively, and any color can be "
"made **less saturated** (more gray or muted) by mixing with another color on "
"the opposite side of the color wheel."
msgstr ""
"In het geval van *traditionele media*, delen we de kleuren (**tinten**) in "
"als hoe het resultaat is als mix van andere kleuren, startend met "
"*subtractive* **primaire kleuren**: cyan, magenta, geel. Het mengen van elke "
"primaire kleur met een andere primaire kleur geeft drie secondaire kleuren: "
"paars, oranje, en groen. Het mengen van deze secondaire kleuren geeft "
"tertiaire kleuren, enzovoort - Het aantal verschillende tinten tussen elke "
"benoemde kleur is praktisch oneindig! Op deze manier naar kleuren kijken "
"creëert een cirkel van tinten dat artiesten *\"de kleurencirkel\"* noemen! "
"Elk van tinten kan **lichter (tint)** of **donkerder (schaduw)** gemaakt "
"worden door het te mengen met respectievelijk wit of zwart, en elke kleur "
"kan **minder verzadigd** (meer grijs of verzacht) gemaakt worden door het te "
"mixen met een ander kleur van de andere kant van de kleurencirkel."

#: ../../general_concepts/colors.rst:34
msgid ""
"In the digital world of computers color is treated similarly, and we order "
"colors by the *way the screen generates them*; each **pixel** of color on "
"our screen is produced by combining *super tiny* red, green, and blue lights "
"of varying intensities. Unlike mixing paint, where light intensity is "
"subtracted by pigment and mixing all the colors together produces a muddy "
"brown or gray, *mixing lights is additive* - no light at all is obviously "
"black, and mixing all of the colored lights produces white. As such, we can "
"make a list of possible primary color **intensities**:"
msgstr ""
"In de digitale wereld van computers word kleuren hetzelfde behandeld, en we "
"delen kleuren in op de *manier waarop het scherm ze genereert*; elke "
"gekleurde **pixel** op ons scherm is geproduceerd door het combineren van "
"*super kleine* rode, groene, en blauwe lichtjes met verschillende "
"intensiteit. In tegenstelling tot het mengen van verf, waar licht "
"intensiteit word verminderd door pigment en het samen mengen van alle "
"kleuren een modderig bruin of grijs geeft, *telt het mixen van licht bij "
"elkaar op* - helemaal geen licht is uiteraard zwart, en geeft het mixen van "
"alle gekleurde licht wit. Op deze manier kunnen we een lijst maken van "
"mogelijke primaire kleur **intensiteiten**:"

#: ../../general_concepts/colors.rst:37
msgid ".. image:: images/color_category/percentages_red.svg"
msgstr ".. image:: images/color_category/percentages_red.svg"

#: ../../general_concepts/colors.rst:38
msgid ""
"Shown above is a table of different intensities of red light. Our screens "
"can certainly create a lot of shades of red, but we only start to see *the "
"power of pixels* when we add in the other primary colors, green and blue, "
"and show the colors of light that are produced when they are added together! "
"For example, here's a table showing various mixes of red and green:"
msgstr ""
"Hierboven ziet u een tabel met verschillende intensiteiten van rood licht. "
"Onze schermen kunnen duidelijk een groot aantal verschillende soorten rood "
"creëren, maar we kunnen pas *de kracht van pixels* zien als we andere "
"primaire kleuren toevoegen, groen en blauw, en de lichtkleuren tonen die "
"geproduceerd worden wanneer ze samengevoegd worden! hier is bijvoorbeeld een "
"tabel met verschillende combinaties van rood en groen:"

#: ../../general_concepts/colors.rst:41
msgid ".. image:: images/color_category/percentages_red_green.svg"
msgstr ".. image:: images/color_category/percentages_red_green.svg"

#: ../../general_concepts/colors.rst:42
msgid ""
"But that's just red and green, what about blue? I guess we can make *even "
"more tables* to show what happens when different amounts of blue are added "
"into the mix:"
msgstr ""
"Maar dat is alleen maar rood en groen, waar is blauw? Ik denk dat we *zelfs "
"nog meer tabellen* kunnen maken om te laten zien wat er gebeurt als er "
"verschillende hoeveelheden blauw aan het mengsel wordt toegevoegd:"

#: ../../general_concepts/colors.rst:45
msgid ".. image:: images/color_category/percentages_red_green_blue.svg"
msgstr ".. image:: images/color_category/percentages_red_green_blue.svg"

#: ../../general_concepts/colors.rst:46
msgid ""
"This way of ordering colors is probably familiar to you if you have used "
"some programs for making internet applications, like Flash. In fact, if we "
"had made 6 samples instead of 5 per \"channel\" (that is, per each primary "
"color), we'd have gotten the `216 websafe colors <https://websafecolors.info/"
"color-chart>`_!"
msgstr ""
"U bent waarschijnlijk bekent met deze manier van kleuren indelen als u "
"programma's heeft gebruikt voor het maken van internet-toepassingen, zoals "
"Flash. Eigenlijk, als we niet 5 voorbeelden maar 6 voorbeelden per \"kanaal"
"\" (dat is voor elke primaire kleur) hadden gemaakt, dan hadden we de `216 "
"websafe kleuren <https://websafecolors.info/color-chart>`_ gekregen!"

#: ../../general_concepts/colors.rst:48
msgid ""
"Showing the colors in a bunch of tables just *feels wrong*, though, doesn't "
"it? That's because, while our tables are *2D*, as we are mixing *three* "
"primary colors, color can be thought of as *3D*! It’s a bit odd the first "
"time you think about it this way, but you can actually stack these tables "
"based on the amount of blue and they become a **cube**!"
msgstr ""
"De kleuren in een aantal tabellen tonen *voelt gewoon niet goed*, maar, is "
"dat ook zo? Maar, terwijl onze tabellen *2D* zijn, mixen we *drie* primaire "
"kleuren, zodat we kleuren als *3D* kunnen bekijken! De eerste keer dat u het "
"op deze manier bekijkt kan het vreemd lijken, maar u kunt deze tabellen "
"gebaseerd op de hoeveelheid blauw stapelen en het wordt een **kubus**!"

#: ../../general_concepts/colors.rst:54
msgid ""
"This cube is not filled with water, or sand, or even *concrete*, but colors! "
"Colors are pretty *abstract*, and we typically talk about cubes and other 3D "
"objects that represent abstract ideas as **spaces**, hence we call this cube "
"a **color space**. Because this particular cube uses red, green, and blue as "
"its axes, we say that our cube is in the RGB :ref:`RGB color model "
"<model_rgb>`."
msgstr ""
"Deze kubus is niet gevuld met water, of zand, of zelf *beton*, maar kleuren! "
"Kleuren zijn nogal *abstract*, en we praten meestal over kubussen en andere "
"3D objecten die abstracte ideeën voorstellen als **ruimtes**, daarom noemen "
"we deze kubus een **kleurruimte**. Omdat deze kubus rood, groen, en blauw "
"als zijn assen gebruikt, zeggen we dat onze kubus in het RGB is :ref:`RGB "
"kleurenmodel <model_rgb>`."

#: ../../general_concepts/colors.rst:56
msgid ""
"There are many more color models. For example, if we were to balance our "
"cube on the black corner, the white corner would be right under our finger "
"at the very top of the cube. And as geometry and maths would have it, if we "
"were to cut the cube in half as we balanced it, the line from the white "
"point at the top to the black point at the bottom would be the **grayscale**."
msgstr ""
"Er zijn nog veel andere kleurmodellen. Bijvoorbeeld, als we onze kubus op "
"zijn zwarte punt laten balanceren, dan zal de witte punt helemaal naar boven "
"wijzen. En als geometry en wiskunde het toelaten, dan zal als we de kubus "
"door midden zagen van de witte punt naar de zwarte punt, een lijn van de "
"witte punt bovenaan naar de zwarte punt onderaan **grijswaarden** gaan."

#: ../../general_concepts/colors.rst:62
msgid ""
"When you think about a strip of grays running through the middle of the "
"cube, as we move farther away from that grayscale towards the *outer edges* "
"of the cube the colors would begin to become more saturated (colorful and "
"vivid). The circle of colors around that middle axis of gray would then "
"define the hue, with a different color in each direction."
msgstr ""
"Als u over een vlak met grijswaarden denkt dat door het midden van de kubus "
"gaat, als we verder weg gaan van die grijswaarde naar de *buitenranden* van "
"de kubus dan zullen de kleuren steeds meer verzadigd worden (kleurrijker en "
"levendiger). De cirkel met kleuren rond de grijze middenas zou dan de tint "
"definiëren, met in elke richting een andere kleur."

#: ../../general_concepts/colors.rst:64
msgid ""
"This is the basic idea of the :ref:`HSV, HSL, HSI, and HSY color models "
"<model_rgb>`. This particular model is called **HSI** (hue, saturation, and "
"intensity), because it maps each unique color to the intensity of the "
"primary colored lights that mix to create them."
msgstr ""
"Dit is het basisidee achter de :ref:`HSV, HSL, HSI, and HSY kleurmodellen "
"<model_rgb>`. Dit specifieke model heeft de naam **HSI** (hue, saturation, "
"en intensiteit), omdat het elke unieke kleur indeelt wat betreft de "
"intensiteit van het primaire gekleurde licht dat nodig was om het te creëren."

#: ../../general_concepts/colors.rst:66
msgid ""
"There are other color models, like :ref:`model_lab`, where we look at the "
"corresponding gray value of a color first, and then try to describe it, not "
"it terms of hue and saturation, but by how red, green, blue, and yellow it "
"is. Because our brains cannot really comprehend a color that is both green "
"and red, or yellow and blue, this makes them good *polar opposites* in a "
"sliding scale. We call this a **perceptual model**, as it is based on how "
"*we see color instead of how the color is generated*."
msgstr ""
"Er zijn andere kleurmodellen, zoals :ref:`model_lab`, waar we eerst kijken "
"naar de bijbehorende grijswaarde van een kleur, en dan proberen het te "
"beschrijven, niet in termen van tint en verzadiging, maar hoe rood, groen, "
"blauw, en geel het is. Omdat ons brein moeite heeft met een kleur dat zowel "
"groen en rood, of geel en blauw is, maakt dat dit goede *polaire "
"tegenstellingen* zijn een glijdende schaal. We noemen dit een **perceptual "
"model**, omdat dit is gebaseerd op hoe *we kleuren zien in plaats van hoe de "
"kleur is gegenereerd*."

#: ../../general_concepts/colors.rst:68
msgid ""
"Color models describe color spaces, which, in turn, are all sorts of sizes "
"and shapes as well. Krita allows you to do operations in different models "
"and spaces, and we call this functionality **\"Color Management\"**."
msgstr ""
"Kleurenbeheer beschrijft kleurruimten, wat allerlei ruimtes en vormen zijn. "
"Met Krita kunt u in verschillende modellen en ruimtes bewerkingen uitvoeren, "
"en we noemen deze mogelijkheid **\"kleurbeheer\"**."

#: ../../general_concepts/colors.rst:70
msgid ""
"Color Management is necessary for :ref:`**CMYK** (subtractive) <model_cmyk>` "
"support, but outside of that, not many drawing or painting programs offer "
"the feature, as *some* developers believe that artists have no need for such "
"functionality. *What a pity!* Especially because Color Management allows for "
"far more *cool tricks* than just basic CMYK support, and the ability to "
"*manipulate colors like a computer can* is perhaps digital painting’s most "
"unique quality!"
msgstr ""
"Kleurbeheer is noodzakelijk voor :ref:`**CMYK** (subtractive) <model_cmyk>` "
"ondersteuning, maar behalve dat, hebben niet veel teken- en schilder-"
"programma's deze mogelijkheid, omdat *sommige* programmeurs geloven dat "
"artiesten deze mogelijkheid niet nodig hebben. *Wat jammer!* omdat met "
"kleurbeheer nog veel meer *leuke dingen* mogelijk zijn dan eenvoudige CMYK "
"ondersteuning, en de mogelijkheid om *kleuren te bewerken zoals alleen een "
"computer dat kan* is misschien de meest unieke eigenschap van digitaal "
"schilderen!"

#: ../../general_concepts/colors.rst:72
msgid ""
"As Krita is giving almost *unprecedented control of color*, this "
"unfortunately means that there are little to no articles out there on how to "
"use color management for artists or painters. And so, we made this category "
"and hope to fill it up with relatively short articles explaining color-"
"related concepts in a light-hearted and visual manner."
msgstr ""
"Omdat Krita een bijna *onvergelijkbare controle over de kleuren* geeft, houd "
"dit helaas in dat er weinig of geen artikelen zijn over hoe artiesten en "
"schilders kleurbeheer kunnen gebruiken. En daarom hebben we deze categorie "
"geschreven en we hopen het te vullen met relatieve korte artikelen over "
"kleur-gerelateerde onderwerpen die luchtig en visueel aantrekkelijk zijn."

#: ../../general_concepts/colors.rst:74
msgid ""
"We recommend going over the :ref:`color managed workflow page "
"<color_managed_workflow>` next - even if you don't plan on using it, it will "
"help make sense out of the many features related to colors and Color "
"Management. Other than that, each article should stand on its own and can be "
"taken in at your own direction and pace!"
msgstr ""
"Wij raden aan om als volgende de :ref:`kleur beheerde workflow pagina "
"<color_managed_workflow>` te lezen - zelfs als u niet van plan bent om het "
"te gebruiken, omdat het u helpt om de vele mogelijkheden wat betreft kleuren "
"en kleurbeheer te begrijpen. Deze uitgezonderd, staat elk artikel op "
"zichzelf en kunt u in uw eigen volgorde en snelheid lezen!"

#: ../../general_concepts/colors.rst:76
msgid "Topics:"
msgstr "Onderwerpen:"
