# Translation of docs_krita_org_user_manual___python_scripting___krita_python_plugin_howto.po to Ukrainian
# Copyright (C) 2019 This_file_is_part_of_KDE
# This file is distributed under the license LGPL version 2.1 or
# version 3 or later versions approved by the membership of KDE e.V.
#
# Yuri Chornoivan <yurchor@ukr.net>, 2019.
msgid ""
msgstr ""
"Project-Id-Version: docs_krita_org_user_manual___python_scripting___krita_pyth"
"on_plugin_howto\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-12 03:19+0200\n"
"PO-Revision-Date: 2019-08-12 09:24+0300\n"
"Last-Translator: Yuri Chornoivan <yurchor@ukr.net>\n"
"Language-Team: Ukrainian <kde-i18n-uk@kde.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=n==1 ? 3 : n%10==1 && n%100!=11 ? 0 : n"
"%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Lokalize 19.11.70\n"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:1
msgid "Guide on all the specifics of creating Krita python plugins."
msgstr "Настанови щодо специфіки створення додатків до Krita мовою Python."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:14
msgid "Python"
msgstr "Python"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:14
msgid "Python Scripting"
msgstr "Сценарії на Python"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:14
msgid "Scripting"
msgstr "Скрипти"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:14
msgid "Plugin"
msgstr "Додаток"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:19
msgid "How to make a Krita Python plugin"
msgstr "Як створити додаток до Krita мовою Python"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:21
msgid ""
"You might have some neat scripts you have written in the Scripter Python "
"runner, but maybe you want to do more with it and run it automatically for "
"instance. Wrapping your script in a plugin can give you much more "
"flexibility and power than running scripts from the Scripter editor."
msgstr ""
"Можливо, ви вже спробувати написати якісь скрипти за допомогою додатка "
"Скриптер і Python, але, ймовірно, хочете чогось більшого, наприклад "
"автоматичного запуску скриптів. Створення вашого скрипту у форматі додатка "
"надасть вашим скриптам гнучкості та ширших можливостей, якщо порівнювати зі "
"скриптами, які запускаються з редактора Скриптера."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:23
msgid ""
"Okay, so even if you know python really well, there are some little details "
"to getting Krita to recognize a python plugin. So this page will give an "
"overview how to create the various types of python script unique to Krita."
msgstr ""
"Гаразд, навіть якщо ви знаєтеся на Python, є дещо, що потрібно знати, щоб "
"Krita змогла розпізнати додаток Python. У цьому розділі наведено огляд "
"питань, які пов'язано із особливостями створення різних типів сценаріїв "
"Python, які є унікальними Krita."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:25
msgid ""
"These mini-tutorials are written for people with a basic understanding of "
"python, and in such a way to encourage experimentation instead of plainly "
"copy and pasting code, so read the text carefully."
msgstr ""
"Ці мініпідручники написано для тих, хто має базові знання з Python, у такий "
"спосіб, щоб заохотити читачів до експериментування, а не до простого "
"копіювання та вставлення коду. Через це, закликаємо вас до уважного читання "
"тексту цього розділу."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:28
msgid "Getting Krita to recognize your plugin"
msgstr "Розпізнавання вашого додатка у Krita"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:30
msgid ""
"A script in Krita has two components - the script directory (holding your "
"script's Python files) and a \".desktop\" file that Krita uses to load and "
"register your script. For Krita to load your script both of these must put "
"be in the pykrita subdirectory of your Krita resources folder (on Linux  ~/."
"local/share/krita/pykrita). To find your resources folder start Krita and "
"click the :menuselection:`Settings --> Manage Resources` menu item. This "
"will open a dialog box. Click the :guilabel:`Open Resources Folder` button. "
"This should open a file manager on your system at your Krita resources "
"folder. See the `API <https://api.kde.org/extragear-api/graphics-apidocs/"
"krita/libs/libkis/html/index.html>`_ docs under \"Auto starting scripts\".  "
"If there is no pykrita subfolder in the Krita resources directory use your "
"file manager to create one."
msgstr ""
"Сценарій у Krita складається з двох компонентів — каталогу сценарію (де "
"містяться файли вашого сценарію Python) та файла «.desktop», який Krita "
"використовує для завантаження та реєстрації вашого сценарію. Щоб Krita могла "
"завантажити ваш сценарій, обидва ці компоненти мають зберігатися у "
"підкаталозі pykrita вашої теки ресурсів Krita (у Linux  ~/.local/share/krita/"
"pykrita). Щоб визначити, яку адресу має тека ресурсів у вашій системі, "
"запустіть Krita і скористайтеся пунктом меню :menuselection:`Параметри --> "
"Керування ресурсами`. У відповідь програма відкриє діалогове вікно. "
"Натисніть у ньому кнопку :guilabel:`Відкрити теку ресурсів`. У відповідь має "
"бути відкрито програму для керування файлами вашої системи із текою ресурсів "
"Krita. Див. `документацію з програмного інтерфейсу <https://api.kde.org/"
"extragear-api/graphics-apidocs/krita/libs/libkis/html/index.html>`_, розділ "
"«Auto starting scripts». Якщо у теці ресурсів Krita немає підтеки pykrita, "
"скористайтеся можливостями програми для керування файлами, щоб її створити."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:32
msgid ""
"Scripts are identified by a file that ends in a .desktop extension that "
"contain information about the script itself."
msgstr ""
"Сценарії розпізнаються за файлом, назва якого завершується суфіксом .desktop "
"і який містить відомості щодо самого сценарію."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:34
msgid ""
"Therefore, for each proper plugin you will need to create a folder, and a "
"desktop file."
msgstr ""
"Отже, для кожного належно форматованого додатка вам слід створити теку та "
"файл desktop."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:36
msgid "The desktop file should look as follows::"
msgstr "Вміст файл desktop має бути таким::"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:38
msgid ""
"[Desktop Entry]\n"
"Type=Service\n"
"ServiceTypes=Krita/PythonPlugin\n"
"X-KDE-Library=myplugin\n"
"X-Python-2-Compatible=false\n"
"X-Krita-Manual=myPluginManual.html\n"
"Name=My Own Plugin\n"
"Comment=Our very own plugin."
msgstr ""
"[Desktop Entry]\n"
"Type=Service\n"
"ServiceTypes=Krita/PythonPlugin\n"
"X-KDE-Library=myplugin\n"
"X-Python-2-Compatible=false\n"
"X-Krita-Manual=myPluginManual.html\n"
"Name=My Own Plugin\n"
"Comment=Our very own plugin."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:47
msgid "Type"
msgstr "Type"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:48
msgid "This should always be service."
msgstr "Тут завжди має бути вказано «service»."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:49
msgid "ServiceTypes"
msgstr "ServiceTypes"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:50
msgid "This should always be Krita/PythonPlugin for python plugins."
msgstr ""
"Значенням цього параметра для додатків мовою Python завжди має бути Krita/"
"PythonPlugin."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:51
msgid "X-KDE-Library"
msgstr "X-KDE-Library"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:52
msgid "This should be the name of the plugin folder you just created."
msgstr ""
"Для цього параметра слід вказати значення назви теки додатка, яку ви щойно "
"створили."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:53
msgid "X-Python-2-Compatible"
msgstr "X-Python-2-Compatible"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:54
msgid ""
"Whether it is python 2 compatible. If Krita was built with python 2 instead "
"of 3 (``-DENABLE_PYTHON_2=ON`` in the cmake configuration), then this plugin "
"will not show up in the list."
msgstr ""
"Визначає сумісність із Python 2. Якщо Krita було зібрано з використанням "
"Python 2, а не 3 (``-DENABLE_PYTHON_2=ON`` у налаштуваннях cmake), пункт "
"цього додатка у списку показано не буде."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:55
msgid "X-Krita-Manual"
msgstr "X-Krita-Manual"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:56
msgid ""
"An Optional Value that will point to the manual item. This is shown in the "
"Python Plugin manager. If it's `an HTML file it'll be shown as rich text "
"<https://doc.qt.io/qt-5/richtext-html-subset.html>`_, if not, it'll be shown "
"as plain text."
msgstr ""
"Необов'язкове значення, яке містить посилання на розділ підручника. Цей "
"розділ буде показано у засобі керування додатками Python. Якщо це `файл "
"HTML, його має бути показано як форматований текст <https://doc.qt.io/qt-5/"
"richtext-html-subset.html>`_, якщо ні, його буде показано як звичайний текст."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:57
msgid "Name"
msgstr "Name"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:58
msgid "The name that will show up in the Python Plugin Manager."
msgstr "Назва, яку буде показано у засобі керування додатками Python."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:60
msgid "Comment"
msgstr "Comment"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:60
msgid "The description that will show up in the Python Plugin Manager."
msgstr "Опис, який буде показано у засобі керування додатками Python."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:62
msgid ""
"Krita python plugins need to be python modules, so make sure there's an "
"__init__.py script, containing something like..."
msgstr ""
"Додатки мовою Python до Krita мають бути модулями Python, тому має бути "
"скрипт __init__.py, який міститиме код, подібний до такого:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:68
#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:89
msgid "from .myplugin import *"
msgstr "from .myplugin import *"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:69
msgid ""
"Where .myplugin is the name of the main file of your plugin. If you restart "
"Krita, it now should show this in the Python Plugin Manager in the settings, "
"but it will be grayed out, because there's no myplugin.py. If you hover over "
"disabled plugins, you can see the error with them."
msgstr ""
"Де .myplugin — назва головного файла вашого додатка. Якщо ви перезапустите "
"Krita, у засобі керування додатками Python буде показано відповідний пункт у "
"параметрах, але пункт буде неактивним, оскільки ще немає myplugin.py. Якщо "
"ви наведете вказівник миші на пункт вимкненого додатка, програма покаже "
"контекстну панель із підказкою щодо того, яка помилка сталася під час спроби "
"завантажити додаток."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:71
msgid ""
"You need to explicitly enable your plugin. Go to the Settings menu, open the "
"Configure Krita dialog and go to the Python Plugin Manager page and enable "
"your plugin."
msgstr ""
"Вам слід явним чином увімкнути цей додаток. Розгорніть меню «Параметри»,"
" відкрийте діалогове вікно налаштовування Krita і перейдіть на сторінку"
" керування додатками Python. На цій сторінці позначте пункт вашого додатка."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:74
msgid "Summary"
msgstr "Summary"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:76
msgid "In summary, if you want to create a script called *myplugin*:"
msgstr "Загалом, якщо ви хочете створити сценарій із назвою *myplugin*:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:79
msgid "in your Krita *resources/pykrita* directory create"
msgstr "у вашому каталозі *resources/pykrita* Krita створіть"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:79
msgid "a folder called *myplugin*"
msgstr "теку із назвою *myplugin*"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:80
msgid "a file called *myplugin.desktop*"
msgstr "файл із назвою *myplugin.desktop*"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:82
msgid "in the *myplugin* folder create"
msgstr "у теці *myplugin* створіть"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:82
msgid "a file called *__init__.py*"
msgstr "файл із назвою *__init__.py*"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:83
msgid "a file called *myplugin.py*"
msgstr "файл із назвою *myplugin.py*"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:84
msgid "in the *__init__.py* file put this code:"
msgstr "у файлі *__init__.py* впишіть такий код:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:90
msgid "in the desktop file put this code::"
msgstr "до файла desktop впишіть такий код::"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:92
msgid ""
"[Desktop Entry]\n"
"Type=Service\n"
"ServiceTypes=Krita/PythonPlugin\n"
"X-KDE-Library=myplugin\n"
"X-Python-2-Compatible=false\n"
"Name=My Own Plugin\n"
"Comment=Our very own plugin."
msgstr ""
"[Desktop Entry]\n"
"Type=Service\n"
"ServiceTypes=Krita/PythonPlugin\n"
"X-KDE-Library=myplugin\n"
"X-Python-2-Compatible=false\n"
"Name=My Own Plugin\n"
"Comment=Our very own plugin."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:100
msgid "write your script in the ''myplugin/myplugin.py'' file."
msgstr "запишіть ваш сценарій до файла ''myplugin/myplugin.py''."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:103
msgid "Creating an extension"
msgstr "Створення розширення"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:105
msgid ""
"`Extensions <https://api.kde.org/extragear-api/graphics-apidocs/krita/libs/"
"libkis/html/classExtension.html>`_ are relatively simple python scripts that "
"run on Krita start. They are made by extending the Extension class, and the "
"most barebones extension looks like this:"
msgstr ""
"`Розширення <https://api.kde.org/extragear-api/graphics-apidocs/krita/libs/"
"libkis/html/classExtension.html>`_ є відносно простими сценаріями python, "
"які запускаються під час завантаження Krita. Розширення створюються "
"розширенням класу Extension. Найпростіше розширення виглядає так:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:125
msgid ""
"from krita import *\n"
"\n"
"class MyExtension(Extension):\n"
"\n"
"    def __init__(self, parent):\n"
"        #This is initialising the parent, always  important when "
"subclassing.\n"
"        super().__init__(parent)\n"
"\n"
"    def setup(self):\n"
"        pass\n"
"\n"
"    def createActions(self, window):\n"
"        pass\n"
"\n"
"# And add the extension to Krita's list of extensions:\n"
"Krita.instance().addExtension(MyExtension(Krita.instance()))"
msgstr ""
"from krita import *\n"
"\n"
"class MyExtension(Extension):\n"
"\n"
"    def __init__(self, parent):\n"
"        #Ініціалізація parent, завжди важливо, якщо створюємо підклас.\n"
"        super().__init__(parent)\n"
"\n"
"    def setup(self):\n"
"        pass\n"
"\n"
"    def createActions(self, window):\n"
"        pass\n"
"\n"
"# І додаємо розширення до списку розширень Krita:\n"
"Krita.instance().addExtension(MyExtension(Krita.instance()))"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:126
msgid ""
"This code of course doesn't do anything. Typically, in createActions we add "
"actions to Krita, so we can access our script from the :guilabel:`Tools` "
"menu."
msgstr ""
"Цей код, звичайно ж, не виконує ніяких дій. Типово, у createActions додають "
"дії для Krita, отже, доступ до нашого сценарію можна отримати за допомогою "
"меню :guilabel:`Інструменти`."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:128
msgid ""
"First, let's create an `action <https://api.kde.org/extragear-api/graphics-"
"apidocs/krita/libs/libkis/html/classAction.html>`_. We can do that easily "
"with `Window.createAction() <https://api.kde.org/extragear-api/graphics-"
"apidocs/krita/libs/libkis/html/classWindow."
"html#a72ec58e53844076c1461966c34a9115c>`_. Krita will call createActions for "
"every Window that is created and pass the right window object that we have "
"to use."
msgstr ""
"Спочатку, створімо `дію <https://api.kde.org/extragear-api/graphics-apidocs/"
"krita/libs/libkis/html/classAction.html>`_. Зробити це дуже просто за "
"допомогою `Window.createAction() <https://api.kde.org/extragear-api/graphics-"
"apidocs/krita/libs/libkis/html/classWindow."
"html#a72ec58e53844076c1461966c34a9115c>`_. Krita викликатиме createActions "
"для кожного створеного вікна Window і передаватиме відповідний об'єкт вікна, "
"яким нам слід користуватися."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:130
msgid "So..."
msgstr "Отже…"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:137
msgid ""
"def createActions(self, window):\n"
"    action = window.createAction(\"myAction\", \"My Script\", \"tools/scripts"
"\")"
msgstr ""
"def createActions(self, window):\n"
"    action = window.createAction(\"myAction\", \"My Script\", \"tools/scripts"
"\")"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:138
msgid "\"myAction\""
msgstr "\"myAction\""

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:139
msgid ""
"This should be replaced with a unique id that Krita will use to find the "
"action."
msgstr ""
"Це слід замінити унікальним ідентифікатором, який Krita використовуватиме "
"для пошуку дії."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:141
msgid "\"My Script\""
msgstr "\"My Script\""

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:141
msgid "This is what will be visible in the tools menu."
msgstr "Це пункт, який буде показано у меню «Інструменти»."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:143
msgid ""
"If you now restart Krita, you will have an action called \"My Script\". It "
"still doesn't do anything, because we haven't connected it to a script."
msgstr ""
"Якщо ви перезапустите Krita, ви побачите дію із назвою «My Script». Її вибір "
"все ще не призводитиме до якихось наслідків, оскільки ми ще не пов'язали її "
"зі сценарієм."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:145
msgid ""
"So, let's make a simple export document script. Add the following to the "
"extension class, make sure it is above where you add the extension to Krita:"
msgstr ""
"Отже, створімо простий сценарій експортування документа. Додайте вказаний "
"нижче код до класу extension. Переконайтеся, що код розташовано вище місця "
"додавання розширення до Krita:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:160
msgid ""
"def exportDocument(self):\n"
"    # Get the document:\n"
"    doc =  Krita.instance().activeDocument()\n"
"    # Saving a non-existent document causes crashes, so lets check for that "
"first.\n"
"    if doc is not None:\n"
"        # This calls up the save dialog. The save dialog returns a tuple.\n"
"        fileName = QFileDialog.getSaveFileName()[0]\n"
"        # And export the document to the fileName location.\n"
"        # InfoObject is a dictionary with specific export options, but when "
"we make an empty one Krita will use the export defaults.\n"
"        doc.exportImage(fileName, InfoObject())"
msgstr ""
"def exportDocument(self):\n"
"    # Отримуємо документ:\n"
"    doc =  Krita.instance().activeDocument()\n"
"    # Збереження документа, якого не існує, призведе до аварійного "
"завершення роботи, отже, спочатку перевіримо.\n"
"    if doc is not None:\n"
"        # Викликаємо діалогове вікно зберігання. Об'єкт повертає кортеж "
"значень.\n"
"        fileName = QFileDialog.getSaveFileName()[0]\n"
"        # І експортуємо документ до розташування fileName.\n"
"        # InfoObject є словником зі специфічними параметрами експортування, "
"але коли ми створюємо порожній, Krita використовуватиме типові параметри "
"експортування.\n"
"        doc.exportImage(fileName, InfoObject())"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:161
msgid "And add the import for QFileDialog above with the imports:"
msgstr "І додайте імпортування QFileDialog згори:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:167
msgid ""
"from krita import *\n"
"from PyQt5.QtWidgets import QFileDialog"
msgstr ""
"from krita import *\n"
"from PyQt5.QtWidgets import QFileDialog"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:168
msgid "Then, to connect the action to the new export document:"
msgstr ""
"Далі, для встановлення з'єднання дій із новим експортованим документом:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:176
msgid ""
"def createActions(self, window):\n"
"    action = window.createAction(\"myAction\", \"My Script\")\n"
"    action.triggered.connect(self.exportDocument)"
msgstr ""
"def createActions(self, window):\n"
"    action = window.createAction(\"myAction\", \"My Script\")\n"
"    action.triggered.connect(self.exportDocument)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:177
msgid ""
"This is an example of a `signal/slot connection <https://doc.qt.io/qt-5/"
"signalsandslots.html>`_, which Qt applications like Krita use a lot. We'll "
"go over how to make our own signals and slots a bit later."
msgstr ""
"Це приклад `з'єднання сигнал-слот <https://doc.qt.io/qt-5/signalsandslots."
"html>`_, який широко використовується у програмах Qt, зокрема Krita. Питання "
"створення наших власних сигналів і слотів ми обговоримо нижче."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:179
msgid "Restart Krita and your new action ought to now export the document."
msgstr "Перезапустіть Krita. Ваша нова дія тепер може експортувати документ."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:182
msgid "Creating configurable keyboard shortcuts"
msgstr "Створення придатних до налаштовування клавіатурних скорочень"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:184
msgid ""
"Now, your new action doesn't show up in :menuselection:`Settings --> "
"Configure Krita --> Keyboard Shortcuts`."
msgstr ""
"Вашої нової дії немає у списку :menuselection:`Параметри --> Налаштувати "
"Krita --> Клавіатурні скорочення`."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:186
msgid ""
"Krita, for various reasons, only adds actions to the shortcuts menu when "
"they are present in an .action file. The action file to get our action to be "
"added to shortcuts should look like this:"
msgstr ""
"Krita, з різних причин, додає пункти дій до меню клавіатурних скорочень, "
"лише якщо їх записано до файла .action. Файл action, який слід додати, щоб "
"нашу дію було додано до списку дій для скорочень, має виглядати десь так:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:210
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<ActionCollection version=\"2\" name=\"Scripts\">\n"
"    <Actions category=\"Scripts\">\n"
"        <text>My Scripts</text>\n"
"\n"
"        <Action name=\"myAction\">\n"
"        <icon></icon>\n"
"        <text>My Script</text>\n"
"        <whatsThis></whatsThis>\n"
"        <toolTip></toolTip>\n"
"        <iconText></iconText>\n"
"        <activationFlags>10000</activationFlags>\n"
"        <activationConditions>0</activationConditions>\n"
"        <shortcut>ctrl+alt+shift+p</shortcut>\n"
"        <isCheckable>false</isCheckable>\n"
"        <statusTip></statusTip>\n"
"        </Action>\n"
"    </Actions>\n"
"</ActionCollection>"
msgstr ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<ActionCollection version=\"2\" name=\"Scripts\">\n"
"    <Actions category=\"Scripts\">\n"
"        <text>My Scripts</text>\n"
"\n"
"        <Action name=\"myAction\">\n"
"        <icon></icon>\n"
"        <text>My Script</text>\n"
"        <whatsThis></whatsThis>\n"
"        <toolTip></toolTip>\n"
"        <iconText></iconText>\n"
"        <activationFlags>10000</activationFlags>\n"
"        <activationConditions>0</activationConditions>\n"
"        <shortcut>ctrl+alt+shift+p</shortcut>\n"
"        <isCheckable>false</isCheckable>\n"
"        <statusTip></statusTip>\n"
"        </Action>\n"
"    </Actions>\n"
"</ActionCollection>"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:211
msgid "<text>My Scripts</text>"
msgstr "<text>My Scripts</text>"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:212
msgid ""
"This will create a sub-category under scripts called \"My Scripts\" to add "
"your shortcuts to."
msgstr ""
"У результаті буде створено підкатегорію у сценаріях із назвою «My Scripts» "
"для додавання ваших клавіатурних скорочень."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:213
msgid "name"
msgstr "name"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:214
msgid ""
"This should be the unique id you made for your action when creating it in "
"the setup of the extension."
msgstr ""
"Це має бути унікальний ідентифікатор, який ви створили для вашої дії під час "
"створення її у налаштування у розширенні."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:215
msgid "icon"
msgstr "icon"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:216
msgid ""
"the name of a possible icon. These will only show up on KDE plasma, because "
"Gnome and Windows users complained they look ugly."
msgstr ""
"назва можливої піктограми. Піктограми буде показано лише у Плазмі KDE, "
"оскільки користувачі GNOME і Windows скаржилися на те, що ці піктограми "
"виглядають потворно."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:217
msgid "text"
msgstr "text"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:218
msgid "The text that it will show in the shortcut editor."
msgstr "Текст, який буде показано у редакторі клавіатурних скорочень."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:219
msgid "whatsThis"
msgstr "whatsThis"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:220
msgid ""
"The text it will show when a Qt application specifically calls for 'what is "
"this', which is a help action."
msgstr ""
"Текст, який буде показано, коли програма на основі Qt викличе дію «Що це?», "
"яка є одним із різновидів контекстної довідки і викликати яку можна за "
"допомогою відповідного пункту у меню «Довідка»."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:221
msgid "toolTip"
msgstr "toolTip"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:222
msgid "The tool tip, this will show up on hover-over."
msgstr ""
"Підказка, яку буде показано на контекстній панелі у відповідь на наведення "
"вказівника миші."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:223
msgid "iconText"
msgstr "iconText"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:224
msgid ""
"The text it will show when displayed in a toolbar. So for example, \"Resize "
"Image to New Size\" could be shortened to \"Resize Image\" to save space, so "
"we'd put that in here."
msgstr ""
"Текст, який буде показано для пункту на панелі інструментів. Отже, "
"наприклад, для дії «Змінити розмір зображення до нового» запис можна "
"скоротити до «Змінити розмір» так, щоб пункт вмістився на панелі "
"інструментів."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:225
msgid "activationFlags"
msgstr "activationFlags"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:226
msgid "This determines when an action is disabled or not."
msgstr "Це визначає, буде дію вимкнено чи ні."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:227
msgid "activationConditions"
msgstr "activationConditions"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:228
msgid ""
"This determines activation conditions (e.g. activate only when selection is "
"editable). See `the code <https://cgit.kde.org/krita.git/tree/libs/ui/"
"kis_action.h#n76>`_ for examples."
msgstr ""
"Визначає умови активації (наприклад «активувати, лише якщо позначена ділянка "
"придатна до редагування»). Див. `приклади у коді <https://cgit.kde.org/krita."
"git/tree/libs/ui/kis_action.h#n76>`_."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:229
msgid "shortcut"
msgstr "shortcut"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:230
msgid "Default shortcut."
msgstr "Типове клавіатурне скорочення."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:231
msgid "isCheckable"
msgstr "isCheckable"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:232
msgid "Whether it is a checkbox or not."
msgstr "Визначає, чи буде поле для позначки."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:234
msgid "statusTip"
msgstr "statusTip"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:234
msgid "The status tip that is displayed on a status bar."
msgstr "Підказка щодо стану, яку буде показано на смужці стану."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:236
msgid ""
"Save this file as \"myplugin.action\" where myplugin is the name of your "
"plugin. The action file should be saved, not in the pykrita resources "
"folder, but rather in a resources folder named \"actions\". (So, share/"
"pykrita is where the python plugins and desktop files go, and share/actions "
"is where the action files go) Restart Krita. The shortcut should now show up "
"in the shortcut action list."
msgstr ""
"Збережіть цей файл із назвою «myplugin.action», де myplugin — назва вашого "
"додатка. Файл дій має бути збережено не у теці ресурсів pykrita, а у теці "
"ресурсів із назвою «actions». (Отже, share/pykrita — місце для додатків "
"Python і файлів desktop, а share/actions — місце для файлів дій (action).) "
"Перезапустіть Krita. Пункт дії має з'явитися у списку клавіатурних скорочень."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:239
msgid "Creating a docker"
msgstr "Створення бічної панелі"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:241
msgid ""
"Creating a custom `docker <https://api.kde.org/extragear-api/graphics-"
"apidocs/krita/libs/libkis/html/classDockWidget.html>`_ is much like creating "
"an extension. Dockers are in some ways a little easier, but they also "
"require more use of widgets. This is the barebones docker code:"
msgstr ""
"Створення нетипової `бічної панелі <https://api.kde.org/extragear-api/"
"graphics-apidocs/krita/libs/libkis/html/classDockWidget.html>`_ дуже схоже "
"на створення розширення. Певним чином, створення бічних панелей є простішим, "
"але для них треба ширше використовувати віджети. Ось базовий код бічної "
"панелі:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:258
msgid ""
"from PyQt5.QtWidgets import *\n"
"from krita import *\n"
"\n"
"class MyDocker(DockWidget):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__()\n"
"        self.setWindowTitle(\"My Docker\")\n"
"\n"
"    def canvasChanged(self, canvas):\n"
"        pass\n"
"\n"
"Krita.instance().addDockWidgetFactory(DockWidgetFactory(\"myDocker\", "
"DockWidgetFactoryBase.DockRight, MyDocker))"
msgstr ""
"from PyQt5.QtWidgets import *\n"
"from krita import *\n"
"\n"
"class MyDocker(DockWidget):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__()\n"
"        self.setWindowTitle(\"My Docker\")\n"
"\n"
"    def canvasChanged(self, canvas):\n"
"        pass\n"
"\n"
"Krita.instance().addDockWidgetFactory(DockWidgetFactory(\"myDocker\", "
"DockWidgetFactoryBase.DockRight, MyDocker))"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:259
msgid ""
"The window title is how it will appear in the docker list in Krita. "
"canvasChanged always needs to be present, but you don't have to do anything "
"with it, so hence just 'pass'."
msgstr ""
"Заголовок вікна, який буде показано у списку бічних панелей у Krita. "
"canvasChanged має бути завжди, але робити з ним щось не обов'язково, отже, "
"просто «пропускаємо» його."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:261
msgid "For the addDockWidgetFactory..."
msgstr "Для addDockWidgetFactory…"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:263
msgid "\"myDocker\""
msgstr "\"myDocker\""

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:264
msgid ""
"Replace this with an unique ID for your docker that Krita uses to keep track "
"of it."
msgstr ""
"Замініть цей рядок на унікальний ідентифікатор вашої бічної панелі, яким "
"Krita користуватиметься для стеження за нею."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:265
msgid "DockWidgetFactoryBase.DockRight"
msgstr "DockWidgetFactoryBase.DockRight"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:266
msgid ""
"The location. These can be DockTornOff, DockTop, DockBottom, DockRight, "
"DockLeft, or DockMinimized"
msgstr ""
"Розташування. Можливі варіанти: DockTornOff, DockTop, DockBottom, DockRight, "
"DockLeft та DockMinimized"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:268
msgid "MyDocker"
msgstr "MyDocker"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:268
msgid "Replace this with the class name of the docker you want to add."
msgstr "Замініть цей рядок назвою класу бічної панелі, яку ви хочете додати."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:270
msgid ""
"So, if we add our export document function we created in the extension "
"section to this docker code, how do we allow the user to activate it? First, "
"we'll need to do some Qt GUI coding: Let's add a button!"
msgstr ""
"Отже, нехай ми додали нашу функцію експортування документа, яку ми створили "
"у розділі, який присвячено розширенням, до коду цієї бічної панелі. Як "
"дозволити користувачу активувати її? Спершу, додамо трохи коду графічного "
"інтерфейсу Qt, а саме, створимо кнопку!"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:272
msgid ""
"By default, Krita uses PyQt, but its documentation is pretty bad, mostly "
"because the regular Qt documentation is really good, and you'll often find "
"that the PyQT documentation of a class, say, `QWidget <https://www."
"riverbankcomputing.com/static/Docs/PyQt4/qwidget.html>`_ is like a weird "
"copy of the regular `Qt documentation <https://doc.qt.io/qt-5/qwidget."
"html>`_ for that class."
msgstr ""
"Типово, у Krita використано PyQt, але документація з PyQt є доволі "
"низькоякісною, здебільшого через те, що документація Qt є якісною. Часто "
"можна бачити, що документація до класу у PyQt, скажімо, `QWidget <https://"
"www.riverbankcomputing.com/static/Docs/PyQt4/qwidget.html>`_ є блідою копією "
"звичайної `документації Qt <https://doc.qt.io/qt-5/qwidget.html>`_ з "
"відповідного класу."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:274
msgid ""
"Anyway, what we need to do first is that we need to create a QWidget, it's "
"not very complicated, under setWindowTitle, add:"
msgstr ""
"Що б там не було, спочатку нам слід створити QWidget. Це не складно: під "
"setWindowTitle додайте таке:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:280
msgid ""
"mainWidget = QWidget(self)\n"
"self.setWidget(mainWidget)"
msgstr ""
"mainWidget = QWidget(self)\n"
"self.setWidget(mainWidget)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:281
msgid "Then, we create a button:"
msgstr "Далі, ми створимо кнопку:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:286
msgid "buttonExportDocument = QPushButton(\"Export Document\", mainWidget)"
msgstr "buttonExportDocument = QPushButton(\"Export Document\", mainWidget)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:287
msgid ""
"Now, to connect the button to our function, we'll need to look at the "
"signals in the documentation. `QPushButton <https://doc.qt.io/qt-5/"
"qpushbutton.html>`_ has no unique signals of its own, but it does say it "
"inherits 4 signals from `QAbstractButton <https://doc.qt.io/qt-5/"
"qabstractbutton.html#signals>`_, which means that we can use those too. In "
"our case, we want clicked."
msgstr ""
"Тепер, для того, щоб з'єднати нашу кнопку з нашою функцією, нам варто "
"ознайомитися із розділом щодо сигналів у документації. У `QPushButton "
"<https://doc.qt.io/qt-5/qpushbutton.html>`_ немає власних сигналів, але цей "
"об'єкт успадковує 4 сигнали від `QAbstractButton <https://doc.qt.io/qt-5/"
"qabstractbutton.html#signals>`_, що означає, що ми можемо ними скористатися. "
"Нам потрібен сигнал clicked."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:292
msgid "buttonExportDocument.clicked.connect(self.exportDocument)"
msgstr "buttonExportDocument.clicked.connect(self.exportDocument)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:293
msgid ""
"If we now restart Krita, we'll have a new docker and in that docker there's "
"a button. Clicking on the button will call up the export function."
msgstr ""
"Якщо тепер перезапустити Krita, ми побачимо нову бічну панелі і кнопку на "
"ній. Натискання кнопки викличе функцію експортування."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:295
msgid ""
"However, the button looks aligned a bit oddly. That's because our mainWidget "
"has no layout. Let's quickly do that:"
msgstr ""
"Втім, кнопку не вирівняно. Причиною цього є те, що у нашого mainWidget немає "
"компонування. Давайте його швиденько додамо:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:301
msgid ""
"mainWidget.setLayout(QVBoxLayout())\n"
"mainWidget.layout().addWidget(buttonExportDocument)"
msgstr ""
"mainWidget.setLayout(QVBoxLayout())\n"
"mainWidget.layout().addWidget(buttonExportDocument)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:302
msgid ""
"Qt has several `layouts <https://doc.qt.io/qt-5/qlayout.html>`_, but the "
"`QHBoxLayout and the QVBoxLayout <https://doc.qt.io/qt-5/qboxlayout.html>`_ "
"are the easiest to use, they just arrange widgets horizontally or vertically."
msgstr ""
"У Qt передбачено декілька `варіантів компонувань <https://doc.qt.io/qt-5/"
"qlayout.html>`_, але найпростішими у користуванні є `QHBoxLayout та "
"QVBoxLayout <https://doc.qt.io/qt-5/qboxlayout.html>`_. Використання цих "
"компонувань вирівнює віджети горизонтально або вертикально."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:304
msgid "Restart Krita and the button should now be laid out nicely."
msgstr "Перезапустіть Krita. Тепер кнопку має бути вирівняно належним чином."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:307
msgid "PyQt Signals and Slots"
msgstr "Сигнали і слоти PyQt"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:309
msgid ""
"We've already been using PyQt signals and slots already, but there are times "
"where you want to create your own signals and slots. `As pyQt's "
"documentation is pretty difficult to understand <https://www."
"riverbankcomputing.com/static/Docs/PyQt4/new_style_signals_slots.html>`_, "
"and the way how signals and slots are created is very different from C++ Qt, "
"we're explaining it here:"
msgstr ""
"Ми вже використовуємо сигнали і слоти PyQt, але іноді виникає потреба у "
"створенні наших власних сигналів та слотів. `Оскільки документація PyQt є "
"доволі складною до розуміння <https://www.riverbankcomputing.com/static/Docs/"
"PyQt4/new_style_signals_slots.html>`_, а способи створення сигналів та "
"слотів дуже відрізняються від Qt у C++, ми наведемо тут деякі пояснення:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:312
msgid ""
"All python functions you make in PyQt can be understood as slots, meaning "
"that they can be connected to signals like Action.triggered or QPushButton."
"clicked. However, QCheckBox has a signal for toggled, which sends a boolean. "
"How do we get our function to accept that boolean?"
msgstr ""
"Усі функції Python, які ви створюєте у PyQt, можна вважати слотами, тобто їх "
"можна з'єднати із сигналами, зокрема Action.triggered або QPushButton."
"clicked. Втім, у QCheckBox передбачено сигнал для перемикання (toggled), "
"який надсилає булеве значення. Як же зробити так, щоб наша функція приймала "
"це булеве значення?"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:314
msgid "First, make sure you have the right import for making custom slots:"
msgstr ""
"Спочатку, правильно сформуємо імпортування для створення нетипових слотів:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:316
msgid "``from PyQt5.QtCore import pyqtSlot``"
msgstr "``from PyQt5.QtCore import pyqtSlot``"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:318
msgid ""
"(If there's from ``PyQt5.QtCore import *`` already in the list of imports, "
"then you won't have to do this, of course.)"
msgstr ""
"(Якщо у списку імпортування вже є from ``PyQt5.QtCore import *``, цього, "
"звичайно ж, уже не треба робити)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:320
msgid "Then, you need to add a PyQt slot definition before your function:"
msgstr "Далі, вам слід додати визначення слоту pyQt перед вашою функцією:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:331
msgid ""
"@pyqtSlot(bool)\n"
"def myFunction(self, enabled):\n"
"    enabledString = \"disabled\"\n"
"    if (enabled == True):\n"
"        enabledString = \"enabled\"\n"
"    print(\"The checkbox is\"+enabledString)"
msgstr ""
"@pyqtSlot(bool)\n"
"def myFunction(self, enabled):\n"
"    enabledString = \"disabled\"\n"
"    if (enabled == True):\n"
"        enabledString = \"enabled\"\n"
"    print(\"The checkbox is\"+enabledString)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:332
msgid ""
"Then, when you have created your checkbox, you can do something like "
"myCheckbox.toggled.connect(self.myFunction)"
msgstr ""
"Далі, коли вами створено пункт для позначки, ви можете скористатися, "
"наприклад, myCheckbox.toggled.connect(self.myFunction)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:334
msgid "Similarly, to make your own PyQt signals, you do the following:"
msgstr ""
"Подібним же чином, для створення власних сигналів PyQt слід скористатися "
"таким кодом:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:345
msgid ""
"# signal name is added to the member variables of the class\n"
"signal_name = pyqtSignal(bool, name='signalName')\n"
"\n"
"def emitMySignal(self):\n"
"    # And this is how you trigger the signal to be emitted.\n"
"    self.signal_name.emit(True)"
msgstr ""
"# до змінних учасників класу додаємо назву сигналу\n"
"signal_name = pyqtSignal(bool, name='signalName')\n"
"\n"
"def emitMySignal(self):\n"
"    # І ось, як ви вмикаєте надсилання сигналу.\n"
"    self.signal_name.emit(True)"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:346
msgid "And use the right import:"
msgstr "і використовувати належне імпортування:"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:348
msgid "``from PyQt5.QtCore import pyqtSignal``"
msgstr "``from PyQt5.QtCore import pyqtSignal``"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:350
msgid ""
"To emit or create slots for objects that aren't standard python objects, you "
"only have to put their names between quotation marks."
msgstr ""
"Для видання та створення слотів для об'єктів, які не є стандартними "
"об'єктами Python достатньо взяти їхні назви у лапки."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:353
msgid "A note on unit tests"
msgstr "Зауваження щодо тестів модулів"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:355
msgid ""
"If you want to write unit tests for your plugin, have a look at the `mock "
"krita module <https://github.com/rbreu/krita-python-mock>`_."
msgstr ""
"Якщо ви хочете написати тести модулів для вашого додатка, ознайомтеся із "
"`цим модулем krita <https://github.com/rbreu/krita-python-mock>`_."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:359
msgid "Conclusion"
msgstr "Висновки"

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:361
msgid ""
"Okay, so that covers all the Krita specific details for creating python "
"plugins. It doesn't handle how to parse the pixel data, or best practices "
"with documents, but if you have a little bit of experience with python you "
"should be able to start creating your own plugins."
msgstr ""
"Гаразд, отже ми обговорили усі специфічні для Krita подробиці щодо створення "
"додатків Python. Тут немає пояснень щодо того, як обробляти дані пікселів "
"або як найкраще обробляти документи, але якщо у вас є хоч якийсь досвід "
"роботи з Python, за допомогою нашої документації ви зможете розпочати "
"створення власних додатків."

#: ../../user_manual/python_scripting/krita_python_plugin_howto.rst:363
msgid ""
"As always, read the code carefully and read the API docs for python, Krita "
"and Qt carefully to see what is possible, and you'll get pretty far."
msgstr ""
"Як завжди, ретельно знайомтеся з кодом і уважно читайте документацію з "
"програмного інтерфейсу Python, Krita та Qt, щоб краще знати можливості цих "
"інструментів, і ви зможете зробити доволі багато."

#~ msgid "No clue"
#~ msgstr "Гадки не маю, що таке."

#~ msgid "No Clue."
#~ msgstr "Гадки не маю, що таке."
